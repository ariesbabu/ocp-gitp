"use strict";(self.webpackChunkocp_gitp=self.webpackChunkocp_gitp||[]).push([[2893],{5680:(e,t,a)=>{a.d(t,{xA:()=>u,yg:()=>y});var n=a(6540);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=p(a),c=r,y=m["".concat(s,".").concat(c)]||m[c]||g[c]||o;return a?n.createElement(y,l(l({ref:t},u),{},{components:a})):n.createElement(y,l({ref:t},u))}));function y(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=c;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[m]="string"==typeof e?e:r,l[1]=i;for(var p=2;p<o;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},9365:(e,t,a)=>{a.d(t,{A:()=>l});var n=a(6540),r=a(53);const o={tabItem:"tabItem_Ymn6"};function l(e){let{children:t,hidden:a,className:l}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.A)(o.tabItem,l),hidden:a},t)}},1470:(e,t,a)=>{a.d(t,{A:()=>w});var n=a(8168),r=a(6540),o=a(53),l=a(3104),i=a(6347),s=a(7485),p=a(1682),u=a(9466);function m(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function g(e){const{values:t,children:a}=e;return(0,r.useMemo)((()=>{const e=t??m(a);return function(e){const t=(0,p.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function c(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function y(e){let{queryString:t=!1,groupId:a}=e;const n=(0,i.W6)(),o=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,s.aZ)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(n.location.search);t.set(o,e),n.replace({...n.location,search:t.toString()})}),[o,n])]}function d(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,o=g(e),[l,i]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!c({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:o}))),[s,p]=y({queryString:a,groupId:n}),[m,d]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,o]=(0,u.Dv)(a);return[n,(0,r.useCallback)((e=>{a&&o.set(e)}),[a,o])]}({groupId:n}),N=(()=>{const e=s??m;return c({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{N&&i(N)}),[N]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!c({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),p(e),d(e)}),[p,d,o]),tabValues:o}}var N=a(2303);const h={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b(e){let{className:t,block:a,selectedValue:i,selectValue:s,tabValues:p}=e;const u=[],{blockElementScrollPositionUntilNextRender:m}=(0,l.a_)(),g=e=>{const t=e.currentTarget,a=u.indexOf(t),n=p[a].value;n!==i&&(m(t),s(n))},c=e=>{let t=null;switch(e.key){case"Enter":g(e);break;case"ArrowRight":{const a=u.indexOf(e.currentTarget)+1;t=u[a]??u[0];break}case"ArrowLeft":{const a=u.indexOf(e.currentTarget)-1;t=u[a]??u[u.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":a},t)},p.map((e=>{let{value:t,label:a,attributes:l}=e;return r.createElement("li",(0,n.A)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>u.push(e),onKeyDown:c,onClick:g},l,{className:(0,o.A)("tabs__item",h.tabItem,l?.className,{"tabs__item--active":i===t})}),a??t)})))}function f(e){let{lazy:t,children:a,selectedValue:n}=e;const o=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function v(e){const t=d(e);return r.createElement("div",{className:(0,o.A)("tabs-container",h.tabList)},r.createElement(b,(0,n.A)({},e,t)),r.createElement(f,(0,n.A)({},e,t)))}function w(e){const t=(0,N.A)();return r.createElement(v,(0,n.A)({key:String(t)},e))}},7624:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>y,frontMatter:()=>i,metadata:()=>p,toc:()=>m});var n=a(8168),r=(a(6540),a(5680)),o=a(1470),l=a(9365);const i={title:"Linux Tools VM",sidebar_position:1},s=void 0,p={unversionedId:"toolsvms/linux_tools_vm",id:"toolsvms/linux_tools_vm",title:"Linux Tools VM",description:"Overview",source:"@site/docs/toolsvms/linux_tools_vm.md",sourceDirName:"toolsvms",slug:"/toolsvms/linux_tools_vm",permalink:"/toolsvms/linux_tools_vm",draft:!1,editUrl:"https://github.com/ariesbabu/ocp-gitp/edit/main/docs/toolsvms/linux_tools_vm.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Linux Tools VM",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Day 0 and Day 1 Operations",permalink:"/ocp_ntnx_hci/ocp_scale_out_in"},next:{title:"Windows Tools VM",permalink:"/toolsvms/windows_tools_vm"}},u={},m=[{value:"Overview",id:"overview",level:2},{value:"Upload Linux Tools VM Image",id:"upload-linux-tools-vm-image",level:2},{value:"Deploying Linux Tools VM",id:"deploying-linux-tools-vm",level:2},{value:"Connect to you Jumpbox using VSCode",id:"connect-to-you-jumpbox-using-vscode",level:3},{value:"Install Utilities on Jumphost VM",id:"install-utilities-on-jumphost-vm",level:2},{value:"Setup Docker on Jumphost",id:"setup-docker-on-jumphost",level:3}],g={toc:m},c="wrapper";function y(e){let{components:t,...a}=e;return(0,r.yg)(c,(0,n.A)({},g,a,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h2",{id:"overview"},"Overview"),(0,r.yg)("p",null,"This Ubuntu VM image will be staged with packages used to support multiple lab exercises."),(0,r.yg)("p",null,"Deploy this VM on your assigned cluster if directed to do so as part of ",(0,r.yg)("strong",{parentName:"p"},"Lab Setup"),"."),(0,r.yg)("h2",{id:"upload-linux-tools-vm-image"},"Upload Linux Tools VM Image"),(0,r.yg)("admonition",{type:"caution"},(0,r.yg)("p",{parentName:"admonition"},"Only deploy the image once with your ",(0,r.yg)("em",{parentName:"p"},"Initials")," in the image name, it does not need to be cleaned up as part of any lab completion.")),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"In Prism Central > Select Compute and Storage > Images  ")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Click on Add Image ")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Select the URL radio button and paste the following image URL"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"https://cloud-images.ubuntu.com/releases/24.04/release/ubuntu-24.04-server-cloudimg-amd64.img\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Click on Upload File and in the description add your ",(0,r.yg)("em",{parentName:"p"},"Initials"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Click on Next and select Place Image Directly on cluster")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Click on Save"))),(0,r.yg)("h2",{id:"deploying-linux-tools-vm"},"Deploying Linux Tools VM"),(0,r.yg)("admonition",{type:"caution"},(0,r.yg)("p",{parentName:"admonition"},"Only deploy the VM once with your ",(0,r.yg)("em",{parentName:"p"},"Initials")," in the VM name, it does not need to be cleaned up as part of any lab completion.")),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"In ",(0,r.yg)("strong",{parentName:"p"},"Prism Central")," > select ",(0,r.yg)("strong",{parentName:"p"},"Menu")," > ",(0,r.yg)("strong",{parentName:"p"},"Compute and Storage > VMs"),", and click ",(0,r.yg)("strong",{parentName:"p"},"Create VM"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Fill out the following fields:"),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Name")," - ocpuserXX-Linux-ToolsVM "),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Description")," - (Optional) Description for your VM."),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Number of VMs")," - 1"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"CPU(s)")," - 4"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Number of Cores per CPU")," - 1"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Memory")," - 4 GiB"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Click ",(0,r.yg)("strong",{parentName:"p"},"Next"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Under ",(0,r.yg)("strong",{parentName:"p"},"Disks")," select ",(0,r.yg)("strong",{parentName:"p"},"Attach Disk")),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Type")," - DISK"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Operation")," - Clone from Image"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Image")," - Ubuntu-image-*.qcow2"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Capacity")," - 100 GiB"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Bus Type")," - leave at default SCSI Setting"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Click ",(0,r.yg)("strong",{parentName:"p"},"Save"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Under ",(0,r.yg)("strong",{parentName:"p"},"Networks")," select ",(0,r.yg)("strong",{parentName:"p"},"Attach to Subnet")),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"VLAN Name")," - Primary"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Network Connection State")," - Connected"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Assignment Type")," - Assign with DHCP"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Click ",(0,r.yg)("strong",{parentName:"p"},"Save"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Click ",(0,r.yg)("strong",{parentName:"p"},"Next")," at the bottom")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"In ",(0,r.yg)("strong",{parentName:"p"},"Management")," section"),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Categories")," - leave blank")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Timezone")," - leave at default UTC")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Guest Customization")," - "),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Script Type")," - Cloud-init (Linux)")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Configuration Method")," - Custom Script "),(0,r.yg)("p",{parentName:"li"},"You will need to create ssh key-pair to use in the cloud-init yaml content (script)"),(0,r.yg)("details",null,(0,r.yg)("summary",null,"Do you need to create a SSH key pair?"),"You can use any online ssh key generator if you are using Windows. Execute the following commands in you are in a Linux / Mac environment to generate a private key.",(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},'ssh-keygen -t rsa -b 2048 -C "Created for Linux Tools VM"\n\n# follow prompts \n# do not specify passphrase\n# once completed run the following command\n\ncat id_rsa.pub\n\n# copy the contents of the id_rsa.pub file to your cloudinit yaml file\n')))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"Paste the following script in the script window once you have access to your ssh key-pair."),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-yaml",metastring:'title="Remember to change to your hostname ocpuserXX-LinuxToolsVM"',title:'"Remember',to:!0,change:!0,your:!0,hostname:!0,'ocpuserXX-LinuxToolsVM"':!0},"#cloud-config\nhostname: ocpuserXX-LinuxToolsVM\npackage_update: true\npackage_upgrade: true\npackage_reboot_if_required: true\npackages:\n  - open-iscsi\n  - nfs-common\n  - git\n  - jq\n  - bind-utils\n  - nmap\nruncmd:\n - systemctl stop ufw && systemctl disable ufw\n - 'su - ubuntu -c \"curl -fsSL https://raw.githubusercontent.com/ariesbabu/ocp-gitp/refs/heads/main/docs/toolsvms/install.sh | bash\"'\nusers:\n  - default\n  - name: ubuntu\n    groups: sudo\n    shell: /bin/bash\n    sudo:\n      - 'ALL=(ALL) NOPASSWD:ALL'\n    ssh-authorized-keys: \n    - ssh-rsa XXXXXX.... # Replace XXXXX with your ssh key-pair\n")))))))),(0,r.yg)("ol",{start:9},(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Click on ",(0,r.yg)("strong",{parentName:"p"},"Next"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Click ",(0,r.yg)("strong",{parentName:"p"},"Create VM")," at the bottom")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Go back to ",(0,r.yg)("strong",{parentName:"p"},"Prism Central")," > ",(0,r.yg)("strong",{parentName:"p"},"Menu")," > ",(0,r.yg)("strong",{parentName:"p"},"Compute and Storage")," > ",(0,r.yg)("strong",{parentName:"p"},"VMs"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Select your ",(0,r.yg)("em",{parentName:"p"},"ocpuserXX"),"-Linux-ToolsVM")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Click update and change the added disk size to 40 GB")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Under ",(0,r.yg)("strong",{parentName:"p"},"Actions")," drop-down menu, choose ",(0,r.yg)("strong",{parentName:"p"},"Power On")),(0,r.yg)("admonition",{parentName:"li",type:"note"},(0,r.yg)("p",{parentName:"admonition"},"It may take up to 10 minutes for the VM to be ready."),(0,r.yg)("p",{parentName:"admonition"},"You can watch the console of the VM from Prism Central to make sure all the clouinit script has finished running."))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Get the IP address of the jumphost VM")),(0,r.yg)("li",{parentName:"ol"})),(0,r.yg)("h3",{id:"connect-to-you-jumpbox-using-vscode"},"Connect to you Jumpbox using VSCode"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"In you browser visit the following URL"),(0,r.yg)(o.A,{mdxType:"Tabs"},(0,r.yg)(l.A,{value:"Template URL",label:"Template URL",default:!0,mdxType:"TabItem"},(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-url"},"https://_your_jumphost_ip\n"))),(0,r.yg)(l.A,{value:"Example URL",label:"Example URL",mdxType:"TabItem"},(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-url"},"https://10.54.63.96\n")))))),(0,r.yg)("p",null,"From now we will work on the browser to access ",(0,r.yg)("inlineCode",{parentName:"p"},"VSCode")," environment and Terminal"),(0,r.yg)("h2",{id:"install-utilities-on-jumphost-vm"},"Install Utilities on Jumphost VM"),(0,r.yg)("p",null,"We have compiled a list of utilities that needs to be installed on the jumphost VM to use for the rest of the lab. We have affectionately called it as ",(0,r.yg)("inlineCode",{parentName:"p"},"nai-llm")," utilities. Use the following method to install these utilities:"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Using ",(0,r.yg)("inlineCode",{parentName:"p"},"VSCode")," in browser")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Click the menu (hamburger) icon followed by Terminal and New Terminal")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Install ",(0,r.yg)("inlineCode",{parentName:"p"},"devbox")," using the following command and accept all defaults"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-sh"},"curl -fsSL https://get.jetpack.io/devbox | bash\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"From the ",(0,r.yg)("inlineCode",{parentName:"p"},"$HOME")," directory, clone the ",(0,r.yg)("inlineCode",{parentName:"p"},"sol-cnai-infra")," git repo and change working directory"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/nutanix-japan/sol-cnai-infra.git\ncd $HOME/sol-cnai-infra/\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Start the ",(0,r.yg)("inlineCode",{parentName:"p"},"devbox shell"),". If ",(0,r.yg)("inlineCode",{parentName:"p"},"nix")," isn't available, you will be prompted to install:"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-sh"},"devbox init\ndevbox shell\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Run Post VM Create - Workstation Bootstrapping tasks"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"sudo snap install task --classic\n")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"task ws:install-packages ws:load-dotfiles --yes -d $HOME/sol-cnai-infra/\n")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"source ~/.bashrc\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Change working directory and see ",(0,r.yg)("inlineCode",{parentName:"p"},"Task")," help"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"cd $HOME/sol-cnai-infra/ && task\n")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-{",metastring:".bash .no-copy }",".bash":!0,".no-copy":!0,"}":!0},"# command output\ntask: bootstrap:silent\n\nSilently initializes cluster configs, git local/remote & fluxcd\n\nSee README.md for additional details on Getting Started\n\nTo see list of tasks, run `task --list` or `task --list-all`\n\ndependencies:\n- bootstrap:default\n\ncommands:\n- Task: bootstrap:generate_local_configs\n- Task: bootstrap:verify-configs\n- Task: bootstrap:generate_cluster_configs\n- Task: nke:download-creds \n- Task: flux:init\n")))),(0,r.yg)("h3",{id:"setup-docker-on-jumphost"},"Setup Docker on Jumphost"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"From VSC, logon to your jumpbox VM")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Open VSC Terminal")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Run the following commands to install ",(0,r.yg)("inlineCode",{parentName:"p"},"docker")," binaries"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"cd $HOME/sol-cnai-infra/; devbox init; devbox shell\ntask workstation:install-docker\n")),(0,r.yg)("admonition",{parentName:"li",type:"tip"},(0,r.yg)("p",{parentName:"admonition"},"Restart the jumpbox host if ",(0,r.yg)("inlineCode",{parentName:"p"},"ubuntu")," user has permission issues using ",(0,r.yg)("inlineCode",{parentName:"p"},"docker")," commands.")))),(0,r.yg)("p",null,"Now the jumphost VM is ready with all the tools to deploy other sections on this site."))}y.isMDXComponent=!0}}]);