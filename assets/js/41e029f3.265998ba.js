"use strict";(self.webpackChunkocp_gitp=self.webpackChunkocp_gitp||[]).push([[4619],{5680:(e,n,a)=>{a.d(n,{xA:()=>m,yg:()=>d});var t=a(6540);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function i(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function o(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?i(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function l(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=t.createContext({}),s=function(e){var n=t.useContext(p),a=n;return e&&(a="function"==typeof e?e(n):o(o({},n),e)),a},m=function(e){var n=s(e.components);return t.createElement(p.Provider,{value:n},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=s(a),u=r,d=c["".concat(p,".").concat(u)]||c[u]||g[u]||i;return a?t.createElement(d,o(o({ref:n},m),{},{components:a})):t.createElement(d,o({ref:n},m))}));function d(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=u;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l[c]="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=a[s];return t.createElement.apply(null,o)}return t.createElement.apply(null,a)}u.displayName="MDXCreateElement"},9365:(e,n,a)=>{a.d(n,{A:()=>o});var t=a(6540),r=a(53);const i={tabItem:"tabItem_Ymn6"};function o(e){let{children:n,hidden:a,className:o}=e;return t.createElement("div",{role:"tabpanel",className:(0,r.A)(i.tabItem,o),hidden:a},n)}},1470:(e,n,a)=>{a.d(n,{A:()=>A});var t=a(8168),r=a(6540),i=a(53),o=a(3104),l=a(6347),p=a(7485),s=a(1682),m=a(9466);function c(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:n,label:a,attributes:t,default:r}}=e;return{value:n,label:a,attributes:t,default:r}}))}function g(e){const{values:n,children:a}=e;return(0,r.useMemo)((()=>{const e=n??c(a);return function(e){const n=(0,s.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,a])}function u(e){let{value:n,tabValues:a}=e;return a.some((e=>e.value===n))}function d(e){let{queryString:n=!1,groupId:a}=e;const t=(0,l.W6)(),i=function(e){let{queryString:n=!1,groupId:a}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:n,groupId:a});return[(0,p.aZ)(i),(0,r.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(t.location.search);n.set(i,e),t.replace({...t.location,search:n.toString()})}),[i,t])]}function y(e){const{defaultValue:n,queryString:a=!1,groupId:t}=e,i=g(e),[o,l]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!u({value:n,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=a.find((e=>e.default))??a[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:i}))),[p,s]=d({queryString:a,groupId:t}),[c,y]=function(e){let{groupId:n}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(n),[t,i]=(0,m.Dv)(a);return[t,(0,r.useCallback)((e=>{a&&i.set(e)}),[a,i])]}({groupId:t}),f=(()=>{const e=p??c;return u({value:e,tabValues:i})?e:null})();(0,r.useLayoutEffect)((()=>{f&&l(f)}),[f]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!u({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);l(e),s(e),y(e)}),[s,y,i]),tabValues:i}}var f=a(2303);const N={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function h(e){let{className:n,block:a,selectedValue:l,selectValue:p,tabValues:s}=e;const m=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.a_)(),g=e=>{const n=e.currentTarget,a=m.indexOf(n),t=s[a].value;t!==l&&(c(n),p(t))},u=e=>{let n=null;switch(e.key){case"Enter":g(e);break;case"ArrowRight":{const a=m.indexOf(e.currentTarget)+1;n=m[a]??m[0];break}case"ArrowLeft":{const a=m.indexOf(e.currentTarget)-1;n=m[a]??m[m.length-1];break}}n?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":a},n)},s.map((e=>{let{value:n,label:a,attributes:o}=e;return r.createElement("li",(0,t.A)({role:"tab",tabIndex:l===n?0:-1,"aria-selected":l===n,key:n,ref:e=>m.push(e),onKeyDown:u,onClick:g},o,{className:(0,i.A)("tabs__item",N.tabItem,o?.className,{"tabs__item--active":l===n})}),a??n)})))}function v(e){let{lazy:n,children:a,selectedValue:t}=e;const i=(Array.isArray(a)?a:[a]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===t));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},i.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==t}))))}function b(e){const n=y(e);return r.createElement("div",{className:(0,i.A)("tabs-container",N.tabList)},r.createElement(h,(0,t.A)({},e,n)),r.createElement(v,(0,t.A)({},e,n)))}function A(e){const n=(0,f.A)();return r.createElement(b,(0,t.A)({key:String(n)},e))}},7753:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>m,contentTitle:()=>p,default:()=>d,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var t=a(8168),r=(a(6540),a(5680)),i=a(1470),o=a(9365);const l={title:"OCP CICD",lastupdate:"git",lastupdateauthor:"git"},p=void 0,s={unversionedId:"ocp_serverless/extend_pipeline",id:"ocp_serverless/extend_pipeline",title:"OCP CICD",description:"Deployment Scenario",source:"@site/docs/ocp_serverless/extend_pipeline.md",sourceDirName:"ocp_serverless",slug:"/ocp_serverless/extend_pipeline",permalink:"/ocp_serverless/extend_pipeline",draft:!1,editUrl:"https://github.com/ariesbabu/ocp-gitp/edit/main/docs/ocp_serverless/extend_pipeline.md",tags:[],version:"current",frontMatter:{title:"OCP CICD",lastupdate:"git",lastupdateauthor:"git"},sidebar:"tutorialSidebar",previous:{title:"OCP Serverless",permalink:"/ocp_serverless/"},next:{title:"Design",permalink:"/ocp_topology/"}},m={},c=[{value:"Deployment Scenario",id:"deployment-scenario",level:2},{value:"Build and Test in Development",id:"build-and-test-in-development",level:3},{value:"Deploy in Staging",id:"deploy-in-staging",level:3}],g={toc:c},u="wrapper";function d(e){let{components:n,...l}=e;return(0,r.yg)(u,(0,t.A)({},g,l,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h2",{id:"deployment-scenario"},"Deployment Scenario"),(0,r.yg)("p",null,"So far we have seen how to build and deploy an application using pipelines and serverless functionality. Now let us get into day-to-day life of a DevOps engineer or a Developer who needs to automate the following workflow."),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},"Build a container image from the source git repository"),(0,r.yg)("li",{parentName:"ol"},"Deploy the image into development environment "),(0,r.yg)("li",{parentName:"ol"},"If the deployment is successful, then tag the image as ready for staging"),(0,r.yg)("li",{parentName:"ol"},"Deploy the ready-for-staging to staging environment")),(0,r.yg)("p",null,"Lucky for us, as we have the pipelines operator (implemented using ",(0,r.yg)("a",{parentName:"p",href:"https://tekton.dev"},"Tekton"),"), and serverless functionality using S2I, we can automate all this OCP and most other Kubernetes distribution (with a little know-how)."),(0,r.yg)("h3",{id:"build-and-test-in-development"},"Build and Test in Development"),(0,r.yg)("p",null,"Let us extend our previously built ",(0,r.yg)("inlineCode",{parentName:"p"},"ocp-gitp-git")," pipeline."),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Browse to you OCP cluster's web UI"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-url"},"https://console-openshift-console.apps.ocpuserXX.ntnxlab.local/\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Login as kubeadmin or a IDP user")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Switch to Developer view")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Make sure you are under ",(0,r.yg)("inlineCode",{parentName:"p"},"dev")," project ")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Click on ",(0,r.yg)("strong",{parentName:"p"},"Pipelines")," option and then click on ",(0,r.yg)("strong",{parentName:"p"},"ocp-gitp-git")," pipeline")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"In the ",(0,r.yg)("strong",{parentName:"p"},"Actions")," menu, click on ",(0,r.yg)("strong",{parentName:"p"},"Edit Pipeline")),(0,r.yg)("p",{parentName:"li"},(0,r.yg)("img",{src:a(2730).A,width:"977",height:"452"}))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Select the ",(0,r.yg)("inlineCode",{parentName:"p"},"deploy")," step and click on the ",(0,r.yg)("inlineCode",{parentName:"p"},"+")," mark next to it, to add a sequential task"),(0,r.yg)("p",{parentName:"li"},(0,r.yg)("img",{src:a(4525).A,width:"712",height:"228"}))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"A new task will appear and join the pipeline ")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Click on the ",(0,r.yg)("strong",{parentName:"p"},"Add task")," and in the search text box type ",(0,r.yg)("inlineCode",{parentName:"p"},"openshift"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Select this, click on ",(0,r.yg)("strong",{parentName:"p"},"Add and install")),(0,r.yg)("p",{parentName:"li"},(0,r.yg)("img",{src:a(9824).A,width:"837",height:"415"}))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"On the right-hand side the task property window will open ")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Enter the following fields:"),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Display name (for task)")," - tag-good-image")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"SCRIPT")," - copy and paste the following script"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash",metastring:'title="Paste this without altering"',title:'"Paste',this:!0,without:!0,'altering"':!0},"oc tag dev/$(params.APP_NAME):latest dev/$(params.APP_NAME):promote-stage\n"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"VERSION")," - latest (we are configuring to use the latest version of ",(0,r.yg)("inlineCode",{parentName:"p"},"OC")," command)"))),(0,r.yg)("p",{parentName:"li"},(0,r.yg)("img",{src:a(2211).A,width:"1240",height:"617"})),(0,r.yg)("admonition",{parentName:"li",type:"tip"},(0,r.yg)("p",{parentName:"admonition"},"We will be using ",(0,r.yg)("inlineCode",{parentName:"p"},"$(PARAMS.APP_NAME)"),"variable's value (populated from when you created the pipeline) as the APP_NAME as it keeps things uniform. You can think of various use cases for variables/parameters.")))),(0,r.yg)("h3",{id:"deploy-in-staging"},"Deploy in Staging"),(0,r.yg)("p",null,"Now that we have built and deployed image in development ",(0,r.yg)("inlineCode",{parentName:"p"},"dev")," namespace. We can proceed to deploy in staging namespace."),(0,r.yg)("p",null,"We will do things a little different this time:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Use the image that was successfully deployed in staging namespace and tagged to be promoted to staging ",(0,r.yg)("inlineCode",{parentName:"li"},":promote-stage")),(0,r.yg)("li",{parentName:"ul"},"Increase the number of replicas to 3 as number of users testing will also increase ")),(0,r.yg)("p",null,"Let's do this!"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Follow the same steps as above to add another task and fill the following fields:"),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Display name (for task)")," - deploy-to-stage")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"SCRIPT")," - copy and paste the following script"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash",metastring:'title="Paste this without altering"',title:'"Paste',this:!0,without:!0,'altering"':!0},"oc project stage\noc delete all --selector app=$(params.APP_NAME)\noc new-app dev/$(params.APP_NAME):promote-stage -n stage --as-deployment-config\noc scale --replicas=3 dc $(params.APP_NAME)\noc delete svc $(params.APP_NAME)\noc expose dc $(params.APP_NAME) --type=ClusterIP --target-port=3000 --port=3000\noc expose svc $(params.APP_NAME) --path='/'\n"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"VERSION")," - latest  "))),(0,r.yg)("p",{parentName:"li"},(0,r.yg)("img",{src:a(9215).A,width:"1112",height:"731"})),(0,r.yg)("details",null,(0,r.yg)("summary",null,"Curious about Tekton pipeline?"),(0,r.yg)("div",null,(0,r.yg)("body",null,(0,r.yg)("p",{parentName:"li"},"If you would like to see a yaml view of the pipeline you just created:"),(0,r.yg)("ol",{parentName:"li"},(0,r.yg)("li",{parentName:"ol"},"Select your ",(0,r.yg)("inlineCode",{parentName:"li"},"ocp-gitp-git")," pipeline"),(0,r.yg)("li",{parentName:"ol"},"Click on ",(0,r.yg)("strong",{parentName:"li"},"YAML")," tab")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-yaml",metastring:'title="Note the params, tasks and workspaces"',title:'"Note',the:!0,"params,":!0,tasks:!0,and:!0,'workspaces"':!0},"apiVersion: tekton.dev/v1\nkind: Pipeline\nmetadata:\n  creationTimestamp: '2025-05-27T05:58:03Z'\n  generation: 2\n  labels:\n    app.kubernetes.io/instance: ocp-gitp-git\n    app.kubernetes.io/name: ocp-gitp-git\n    operator.tekton.dev/operand-name: openshift-pipelines-addons\n    pipeline.openshift.io/runtime: nodejs\n    pipeline.openshift.io/runtime-version: 20-minimal-ubi8\n    pipeline.openshift.io/type: kubernetes\n  managedFields:\n    - apiVersion: tekton.dev/v1\n      fieldsType: FieldsV1\n      fieldsV1:\n        'f:metadata':\n          'f:labels':\n            .: {}\n            'f:app.kubernetes.io/instance': {}\n            'f:app.kubernetes.io/name': {}\n            'f:operator.tekton.dev/operand-name': {}\n            'f:pipeline.openshift.io/runtime': {}\n            'f:pipeline.openshift.io/runtime-version': {}\n            'f:pipeline.openshift.io/type': {}\n        'f:spec':\n          .: {}\n          'f:finally': {}\n          'f:params': {}\n          'f:tasks': {}\n          'f:workspaces': {}\n      manager: Mozilla\n      operation: Update\n      time: '2025-05-27T06:39:08Z'\n  name: ocp-gitp-git\n  namespace: dev\n  resourceVersion: '347269'\n  uid: 9e12fac5-19fa-4a13-be7c-93505503a3f5\nspec:\n  params:\n    - default: ocp-gitp-git\n      name: APP_NAME\n      type: string\n    - default: 'https://github.com/ariesbabu/ocp-gitp.git'\n      name: GIT_REPO\n      type: string\n    - name: GIT_REVISION\n      type: string\n    - default: 'image-registry.openshift-image-registry.svc:5000/dev/ocp-gitp-git'\n      name: IMAGE_NAME\n      type: string\n    - default: .\n      name: PATH_CONTEXT\n      type: string\n    - default: 20-minimal-ubi8\n      name: VERSION\n      type: string\n  tasks:\n    - name: fetch-repository\n      params:\n        - name: URL\n          value: $(params.GIT_REPO)\n        - name: REVISION\n          value: $(params.GIT_REVISION)\n        - name: SUBDIRECTORY\n          value: ''\n        - name: DELETE_EXISTING\n          value: 'true'\n      taskRef:\n        params:\n          - name: kind\n            value: task\n          - name: name\n            value: git-clone\n          - name: namespace\n            value: openshift-pipelines\n        resolver: cluster\n      workspaces:\n        - name: output\n          workspace: workspace\n    - name: build\n      params:\n        - name: IMAGE\n          value: $(params.IMAGE_NAME)\n        - name: TLS_VERIFY\n          value: 'false'\n        - name: CONTEXT\n          value: $(params.PATH_CONTEXT)\n        - name: VERSION\n          value: $(params.VERSION)\n      runAfter:\n        - fetch-repository\n      taskRef:\n        params:\n          - name: kind\n            value: task\n          - name: name\n            value: s2i-nodejs\n          - name: namespace\n            value: openshift-pipelines\n        resolver: cluster\n      workspaces:\n        - name: source\n          workspace: workspace\n    - name: deploy\n      params:\n        - name: SCRIPT\n          value: oc rollout status deploy/$(params.APP_NAME)\n      runAfter:\n        - build\n      taskRef:\n        params:\n          - name: kind\n            value: task\n          - name: name\n            value: openshift-client\n          - name: namespace\n            value: openshift-pipelines\n        resolver: cluster\n    - name: tag-good-name\n      params:\n        - name: SCRIPT\n          value: 'oc tag dev/$(params.APP_NAME):latest dev/$(params.APP_NAME):promote-stage'\n        - name: VERSION\n          value: latest\n      runAfter:\n        - deploy\n      taskRef:\n        kind: Task\n        name: openshift-client\n    - name: deploy-to-stage\n      params:\n        - name: SCRIPT\n          value: |-\n            oc project stage\n            oc delete all --selector app=$(params.APP_NAME)\n            oc new-app dev/$(params.APP_NAME):promote-stage -n stage --as-deployment-config\n            oc scale --replicas=3 dc $(params.APP_NAME)\n            oc delete svc $(params.APP_NAME)\n            oc expose dc $(params.APP_NAME) --type=ClusterIP --target-port=3000 --port=3000\n            oc expose svc $(params.APP_NAME) --path='/'\n        - name: VERSION\n          value: '4.7'\n      runAfter:\n        - tag-good-name\n      taskRef:\n        kind: Task\n        name: openshift-client\n  workspaces:\n    - name: workspace\n")))))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Click on ",(0,r.yg)("strong",{parentName:"p"},"Save")," ")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Go to ",(0,r.yg)("strong",{parentName:"p"},"Actions")," menu, and click on ",(0,r.yg)("strong",{parentName:"p"},"Start"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Type ",(0,r.yg)("inlineCode",{parentName:"p"},"main")," as git revision if prompted")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Monitor the run in the PipelineRuns tab, and you should be able to monitor the pipeline run"),(0,r.yg)("p",{parentName:"li"},(0,r.yg)("img",{src:a(8085).A,width:"1118",height:"732"})),(0,r.yg)("p",{parentName:"li"},"Make sure the pipeline run is successful, if there issues, troubleshoot and fix before moving on.")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Optional - Using ",(0,r.yg)("inlineCode",{parentName:"p"},"oc")," command line, run the following commands to confirm the presence of resources in stage namespace/project"),(0,r.yg)(i.A,{mdxType:"Tabs"},(0,r.yg)(o.A,{value:"Command",mdxType:"TabItem"},(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"oc get all -n stage\n"))),(0,r.yg)(o.A,{value:"Command and output",mdxType:"TabItem"},(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"oc get all -n stage\n#\nNAME                        READY   STATUS      RESTARTS   AGE\npod/ocp-gitp-git-1-929g7    1/1     Running     0          90m\npod/ocp-gitp-git-1-deploy   0/1     Completed   0          90m\npod/ocp-gitp-git-1-gp478    1/1     Running     0          90m\npod/ocp-gitp-git-1-wmq88    1/1     Running     0          90m\n\nNAME                                   DESIRED   CURRENT   READY   AGE\nreplicationcontroller/ocp-gitp-git-1   3         3         3       90m\n\nNAME                   TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)    AGE\nservice/ocp-gitp-git   ClusterIP   172.30.165.192   <none>        3000/TCP   90m\n\nNAME                                              REVISION   DESIRED   CURRENT   TRIGGERED BY\ndeploymentconfig.apps.openshift.io/ocp-gitp-git   1          3         3         config,image(ocp-gitp-git:promote-stage)\n\nNAME                                    HOST/PORT                                           PATH         SERVICES       PORT   TERMINATION   WILDCARD\nroute.route.openshift.io/ocp-gitp-git   ocp-gitp-git-stage.apps.ocp-cluster.ntnxlab.local   /ocp-gitp/   ocp-gitp-git   3000                 None\n"))))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Click on ",(0,r.yg)("strong",{parentName:"p"},"Topology")," option, and click on the URL on your application as shown here, this is a route created by the pipeline for application access"),(0,r.yg)("p",{parentName:"li"},(0,r.yg)("img",{src:a(2164).A,width:"811",height:"342"})),(0,r.yg)("p",{parentName:"li"},"The application should open in a new browser tab"),(0,r.yg)("p",{parentName:"li"},(0,r.yg)("img",{src:a(5261).A,width:"1094",height:"593"})),(0,r.yg)("admonition",{parentName:"li",type:"note"},(0,r.yg)("p",{parentName:"admonition"},"Note that the documentation site NodeJS application is now hosted on your OCP cluster"),(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre",className:"language-url"},"http://ocp-gitp-git-stage.apps.user02.ntnxlab.local/\n")),(0,r.yg)("p",{parentName:"admonition"},"Where:"),(0,r.yg)("ul",{parentName:"admonition"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"ocp-gitp-git")," - is your application name"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"stage")," - is your namespace/project name"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"ocpuser02")," - is your OCP cluster"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"ntnxlab.local")," - is your domain"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"/ocp-gitp/")," - is your basePath url"))))),(0,r.yg)("p",null,"You can note how easy it is build pipelines to automate your deployments using serverless and CICD."))}d.isMDXComponent=!0},4525:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/add-seq-step-4e2ae66632a74b59d69973561fb00fc4.png"},9215:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/deplopy-to-stage-script-dd0207e8f3a36d0f58ba1935671ec70e.png"},2730:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/edit-pl-97bae234dcd52d5615476aa0706ea0b3.png"},5261:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/gitp_hosted_on_ocp_stage-72c8b038f8703501f28827bed254302f.png"},8085:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/pl-run-success-d8b8cf4f508ca39fa2cc3334c0a08b79.png"},2164:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/plr_topology_app_access-c02661344004ba2ec94a59c87bc0e34d.png"},9824:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/search-openshift-client-install-cf8506576a443f70cf13b14da659f326.png"},2211:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/tag-image-script-2ea3cc5199e90fed00acf0e7754c6885.png"}}]);