"use strict";(self.webpackChunkocp_gitp=self.webpackChunkocp_gitp||[]).push([[5975],{5680:(e,t,a)=>{a.d(t,{xA:()=>c,yg:()=>d});var n=a(6540);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(a),g=r,d=m["".concat(s,".").concat(g)]||m[g]||u[g]||o;return a?n.createElement(d,l(l({ref:t},c),{},{components:a})):n.createElement(d,l({ref:t},c))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=g;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[m]="string"==typeof e?e:r,l[1]=i;for(var p=2;p<o;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}g.displayName="MDXCreateElement"},9365:(e,t,a)=>{a.d(t,{A:()=>l});var n=a(6540),r=a(53);const o={tabItem:"tabItem_Ymn6"};function l(e){let{children:t,hidden:a,className:l}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.A)(o.tabItem,l),hidden:a},t)}},1470:(e,t,a)=>{a.d(t,{A:()=>w});var n=a(8168),r=a(6540),o=a(53),l=a(3104),i=a(6347),s=a(7485),p=a(1682),c=a(9466);function m(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function u(e){const{values:t,children:a}=e;return(0,r.useMemo)((()=>{const e=t??m(a);return function(e){const t=(0,p.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function g(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function d(e){let{queryString:t=!1,groupId:a}=e;const n=(0,i.W6)(),o=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,s.aZ)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(n.location.search);t.set(o,e),n.replace({...n.location,search:t.toString()})}),[o,n])]}function y(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,o=u(e),[l,i]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!g({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:o}))),[s,p]=d({queryString:a,groupId:n}),[m,y]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,o]=(0,c.Dv)(a);return[n,(0,r.useCallback)((e=>{a&&o.set(e)}),[a,o])]}({groupId:n}),N=(()=>{const e=s??m;return g({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{N&&i(N)}),[N]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!g({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),p(e),y(e)}),[p,y,o]),tabValues:o}}var N=a(2303);const h={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function f(e){let{className:t,block:a,selectedValue:i,selectValue:s,tabValues:p}=e;const c=[],{blockElementScrollPositionUntilNextRender:m}=(0,l.a_)(),u=e=>{const t=e.currentTarget,a=c.indexOf(t),n=p[a].value;n!==i&&(m(t),s(n))},g=e=>{let t=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const a=c.indexOf(e.currentTarget)+1;t=c[a]??c[0];break}case"ArrowLeft":{const a=c.indexOf(e.currentTarget)-1;t=c[a]??c[c.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":a},t)},p.map((e=>{let{value:t,label:a,attributes:l}=e;return r.createElement("li",(0,n.A)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>c.push(e),onKeyDown:g,onClick:u},l,{className:(0,o.A)("tabs__item",h.tabItem,l?.className,{"tabs__item--active":i===t})}),a??t)})))}function b(e){let{lazy:t,children:a,selectedValue:n}=e;const o=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function C(e){const t=y(e);return r.createElement("div",{className:(0,o.A)("tabs-container",h.tabList)},r.createElement(f,(0,n.A)({},e,t)),r.createElement(b,(0,n.A)({},e,t)))}function w(e){const t=(0,N.A)();return r.createElement(C,(0,n.A)({key:String(t)},e))}},1419:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>p,toc:()=>m});var n=a(8168),r=(a(6540),a(5680)),o=a(1470),l=a(9365);const i={title:"Pre-requisites",lastupdate:"git",lastupdateauthor:"git"},s=void 0,p={unversionedId:"ocp_ipi_install/ocp_ipi_pre_reqs",id:"ocp_ipi_install/ocp_ipi_pre_reqs",title:"Pre-requisites",description:"Preparing Pre-requisites",source:"@site/docs/ocp_ipi_install/ocp_ipi_pre_reqs.md",sourceDirName:"ocp_ipi_install",slug:"/ocp_ipi_install/ocp_ipi_pre_reqs",permalink:"/ocp_ipi_install/ocp_ipi_pre_reqs",draft:!1,editUrl:"https://github.com/ariesbabu/ocp-gitp/edit/main/docs/ocp_ipi_install/ocp_ipi_pre_reqs.md",tags:[],version:"current",frontMatter:{title:"Pre-requisites",lastupdate:"git",lastupdateauthor:"git"},sidebar:"tutorialSidebar",previous:{title:"IPI Introduction",permalink:"/ocp_ipi_install/ocp_ipi_intro"},next:{title:"Create Configuration Manifests",permalink:"/ocp_ipi_install/ocp_ipi_config_file"}},c={},m=[{value:"Preparing Pre-requisites",id:"preparing-pre-requisites",level:2},{value:"Preparing your HPOC cluster",id:"preparing-your-hpoc-cluster",level:3},{value:"AHV Networking",id:"ahv-networking",level:3},{value:"Add DNS Records",id:"add-dns-records",level:3},{value:"Downloading OCP Tools",id:"downloading-ocp-tools",level:3},{value:"Creating and Installing SSL Certificate on Prism Central",id:"creating-and-installing-ssl-certificate-on-prism-central",level:3},{value:"Setting up Cloud Credential Operator Utility (CCOCTL)",id:"setting-up-cloud-credential-operator-utility-ccoctl",level:3}],u={toc:m},g="wrapper";function d(e){let{components:t,...i}=e;return(0,r.yg)(g,(0,n.A)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h2",{id:"preparing-pre-requisites"},"Preparing Pre-requisites"),(0,r.yg)("p",null,"We will be deploying OCP cluster using IPI method once the following pre-requisites are met. Be sure to make sure all pre-requisites are prepared."),(0,r.yg)("h3",{id:"preparing-your-hpoc-cluster"},"Preparing your HPOC cluster"),(0,r.yg)("admonition",{title:"Do you have enough compute resources?",type:"caution"},(0,r.yg)("p",{parentName:"admonition"},"We have planned enough resources in Nutanix cluster for you to deploy OCP cluster and workloads as well. "),(0,r.yg)("p",{parentName:"admonition"},"For latest OCP resource requirements refer to OpenShift portal ",(0,r.yg)("a",{parentName:"p",href:"https://docs.openshift.com/container-platform/4.9/installing/installing_platform_agnostic/installing-platform-agnostic.html#installation-minimum-resource-requirements_installing-platform-agnostic"},"here.")),(0,r.yg)("p",{parentName:"admonition"},"At the time of writing this document the following resources are created by OCP IPI installer."),(0,r.yg)("table",{parentName:"admonition"},(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"OCP Role"),(0,r.yg)("th",{parentName:"tr",align:null},"Operating System"),(0,r.yg)("th",{parentName:"tr",align:null},"vCPU"),(0,r.yg)("th",{parentName:"tr",align:null},"RAM"),(0,r.yg)("th",{parentName:"tr",align:null},"Storage"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Master   x 3"),(0,r.yg)("td",{parentName:"tr",align:null},"RHCOS"),(0,r.yg)("td",{parentName:"tr",align:null},"8"),(0,r.yg)("td",{parentName:"tr",align:null},"16 GB"),(0,r.yg)("td",{parentName:"tr",align:null},"120 GB")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Worker    x 2"),(0,r.yg)("td",{parentName:"tr",align:null},"RHCOS, RHEL 7.9, or RHEL 8.4"),(0,r.yg)("td",{parentName:"tr",align:null},"4"),(0,r.yg)("td",{parentName:"tr",align:null},"16 GB"),(0,r.yg)("td",{parentName:"tr",align:null},"120 GB")))),(0,r.yg)("blockquote",{parentName:"admonition"},(0,r.yg)("p",{parentName:"blockquote"},"Additional space for bootstrap vms (deleted after install) and RHCOS image files are also accounted for."))),(0,r.yg)("h3",{id:"ahv-networking"},"AHV Networking"),(0,r.yg)("p",null,"We will first find two IPs for OCP ",(0,r.yg)("inlineCode",{parentName:"p"},"api")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"apps")," ingress endpoints in our network and add it to the ",(0,r.yg)("strong",{parentName:"p"},"Primary")," IPAM network blacklist. "),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Find the CIDR range for your  ",(0,r.yg)("strong",{parentName:"p"},"Primary")," IPAM network either from ",(0,r.yg)("a",{parentName:"p",href:"https://rx.corp.nutanix.com/"},"RX")," or from your instrutor"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-buttonless",metastring:'title="CIDR example for your Nutanix cluster"',title:'"CIDR',example:!0,for:!0,your:!0,Nutanix:!0,'cluster"':!0},"10.38.18.192/26\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Logon to your UserXX-LinuxToolsVM Terminal in the browser using ",(0,r.yg)("inlineCode",{parentName:"p"},"code-server")," that you installed in the previous section")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Find two unused static IP addresses"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"cd $HOME/sol-cnai-infra/; devbox init; devbox shell\n")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash",metastring:'title="Add nmap"',title:'"Add','nmap"':!0},"devbox add nmap\nnmap -v -sn  <your HPOC CIDR> # Use Lookup Tool to find your cluster CIDR\n")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash",metastring:'title="Sample command"',title:'"Sample','command"':!0},"nmap -v -sn 10.38.18.192/26\n")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-buttonless",metastring:'{1,2} title="Sample output - choose the first two consecutive IPs"',"{1,2}":!0,title:'"Sample',output:!0,"-":!0,choose:!0,the:!0,first:!0,two:!0,consecutive:!0,'IPs"':!0},"Nmap scan report for 10.38.18.219 [host down] \nNmap scan report for 10.38.18.220 [host down]\nNmap scan report for 10.38.18.221\nHost is up (-0.098s latency).\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Logon to any CVM in your cluster and execute the following to add chosen static IPs to the ",(0,r.yg)("strong",{parentName:"p"},"Primary")," IPAM network"),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"Username: ubuntu"),(0,r.yg)("li",{parentName:"ul"},"Password: your cluster password # Use Lookup Tool to find your CVM/PE Cluster password")),(0,r.yg)(o.A,{mdxType:"Tabs"},(0,r.yg)(l.A,{value:"Template Command",label:"Template Command",default:!0,mdxType:"TabItem"},(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"acli net.add_to_ip_blacklist <your-ipam-ahv-network> ip_list=10.38.18.219,10.38.18.220\n"))),(0,r.yg)(l.A,{value:"Example Command",label:"Example Command",mdxType:"TabItem"},(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash",metastring:'title="Sample command"',title:'"Sample','command"':!0},"acli net.add_to_ip_blacklist Primary ip_list=10.38.18.219,10.38.18.220\n")))))),(0,r.yg)("h3",{id:"add-dns-records"},"Add DNS Records"),(0,r.yg)("p",null,"In this section we will add PC, API and APPS Ingress DNS records for lookup by OCP IPI installer."),(0,r.yg)("p",null,"Your OCP cluster's name becomes a subdomain in your DNS zone ",(0,r.yg)("inlineCode",{parentName:"p"},"ntnxlab.local"),". All OCP cluster related lookups are located within subdomain."),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Main domain -  ",(0,r.yg)("inlineCode",{parentName:"li"},"ntnxlab.local")," (this gets created with your HPOC reservation)",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"Sub domain - ",(0,r.yg)("inlineCode",{parentName:"li"},"ocpuserXX.ntnxlab.local")," (e.g. ocpuser01, ocpuser02, etc, is your OCP cluster's name)")))),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Logon to the AutoAD windows VM "),(0,r.yg)("blockquote",{parentName:"li"},(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("strong",{parentName:"p"},"Username"),": administrator")),(0,r.yg)("blockquote",{parentName:"li"},(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("strong",{parentName:"p"},"Password"),": default # Use lookup tool to find the password "))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"We will add the following entries to DNS server using the two consecutive IPs you found in the previous section"),(0,r.yg)("admonition",{parentName:"li",title:"Use your assigned HPOC cluster's IP Addresses",type:"caution"},(0,r.yg)("p",{parentName:"admonition"},"The IP addresses in the following commands are used as an example. You should use IP address details that belong to your HPOC cluster. "),(0,r.yg)("p",{parentName:"admonition"},"For information on locating your cluster IP see ",(0,r.yg)("a",{parentName:"p",href:"https://lookup.howntnx.win"},"Lookup")," website.")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-buttonless"},"10.38.18.219   api.ocpuserXX.ntnxlab.local\n10.38.18.220   *.apps.ocpuserXX.ntnxlab.local\n10.38.18.201   pc.ntnxlab.local\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Open PowerShell ISE as Administrator and create the two A records"),(0,r.yg)("admonition",{parentName:"li",type:"caution"},(0,r.yg)("p",{parentName:"admonition"},"Create entry for Prism Central (pc) only if it is not present")),(0,r.yg)(o.A,{mdxType:"Tabs"},(0,r.yg)(l.A,{value:"Template commands",mdxType:"TabItem"},(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-PowerShell",metastring:'title="Add the API A record - use your own subdomain"',title:'"Add',the:!0,API:!0,A:!0,record:!0,"-":!0,use:!0,your:!0,own:!0,'subdomain"':!0},"Add-DnsServerResourceRecordA -Name api.<ocpuserXX> -IPv4Address <your API IP> -ZoneName ntnxlab.local -ZoneScope ntnxlab.local\n")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-PowerShell",metastring:'title="Add the apps Ingress A record - use your own subdomain"',title:'"Add',the:!0,apps:!0,Ingress:!0,A:!0,record:!0,"-":!0,use:!0,your:!0,own:!0,'subdomain"':!0},"Add-DnsServerResourceRecordA -Name *.apps.<ocpuserXX> -IPv4Address <your Ingress IP> -ZoneName ntnxlab.local -ZoneScope ntnxlab.local \n")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-PowerShell",metastring:'title="Optional - Add the Prism Central A record - if not present"',title:'"Optional',"-":!0,Add:!0,the:!0,Prism:!0,Central:!0,A:!0,record:!0,if:!0,not:!0,'present"':!0},"Add-DnsServerResourceRecordA -Name pc -IPv4Address <your PC IP> -ZoneName ntnxlab.local -ZoneScope ntnxlab.local \n"))),(0,r.yg)(l.A,{value:"Sample commands",mdxType:"TabItem"},(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-buttonless",metastring:"title=\"Sample commands with 'ocpuser01' as a subdomain and your OCP cluster name\"",title:'"Sample',commands:!0,with:!0,"'ocpuser01'":!0,as:!0,a:!0,subdomain:!0,and:!0,your:!0,OCP:!0,cluster:!0,'name"':!0},"Add-DnsServerResourceRecordA -Name api.ocpuser01 -IPv4Address 10.38.18.219 -ZoneName ntnxlab.local -ZoneScope ntnxlab.local\nAdd-DnsServerResourceRecordA -Name *.apps.ocpuser01 -IPv4Address 10.38.18.220 -ZoneName ntnxlab.local -ZoneScope ntnxlab.local \n")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-PowerShell",metastring:'title="Optional - Add the Prism Central A record - if not present"',title:'"Optional',"-":!0,Add:!0,the:!0,Prism:!0,Central:!0,A:!0,record:!0,if:!0,not:!0,'present"':!0},"Add-DnsServerResourceRecordA -Name pc -IPv4Address 10.38.18.201 -ZoneName ntnxlab.local -ZoneScope ntnxlab.local\n"))))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Test name resolution for added entries"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-PowerShell",metastring:"{6}","{6}":!0},"nslookup api.ocpuser01.ntnxlab.local\nServer: dc.ntnxlab.local\nAddress: 10.38.18.203\n\nName: api.ocpuser01.ntnxlab.local\nAddress: 10.38.18.219 \n")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash",metastring:"{6}","{6}":!0},"nslookup myapp.apps.ocpuser01.ntnxlab.local\nServer: dc.ntnxlab.local\nAddress: 10.38.18.203\n\nName: myapp.apps.ocpuser01.ntnxlab.local\nAddress: 10.38.18.220\n")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash",metastring:"{6}","{6}":!0},"nslookup pc.ntnxlab.local\nServer: dc.ntnxlab.local\nAddress: 10.38.18.203\n\nName: pc.ntnxlab.local\nAddress: 10.38.3.201\n")))),(0,r.yg)("h3",{id:"downloading-ocp-tools"},"Downloading OCP Tools"),(0,r.yg)("p",null,"We will need to the OCP tools mentioned in the pre-requisites section to prepare our environment"),(0,r.yg)("admonition",{title:"OCP Tools information",type:"info"},(0,r.yg)("p",{parentName:"admonition"},"You can get the URLs to download the tools and pull secret from RedHat Console: "),(0,r.yg)("p",{parentName:"admonition"},"Openshift > Clusters > Create Clusters > Datacenter > ",(0,r.yg)("a",{parentName:"p",href:"https://console.redhat.com/openshift/install/nutanix/installer-provisioned"},"Nutanix AOS")),(0,r.yg)("p",{parentName:"admonition"},"In this section please using the download links provided is also ok. ")),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Logon to UserXX-LinuxToolsVM ")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Go to Terminal in ",(0,r.yg)("inlineCode",{parentName:"p"},"VSCode")," on the browser")),(0,r.yg)("li",{parentName:"ol"}),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Create a folder under your user name from cluster lookup site (if you are in a lab environment)"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash",metastring:'title="Use your user number - for example ocpuser01"',title:'"Use',your:!0,user:!0,number:!0,"-":!0,for:!0,example:!0,'ocpuser01"':!0},"cd $HOME\nmkdir ocpuserXX # e.g. `mkdir ocpuser01` / mkdir ocpuser01\ncd ocpuserXX # e.g. cd ocpuser01\ncurl -O https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/4.16.5/openshift-install-linux-4.16.5.tar.gz  \ncurl -O https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/4.16.5/openshift-client-linux-4.16.5.tar.gz\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Extract the binaries and copy them to ",(0,r.yg)("inlineCode",{parentName:"p"},"/usr/local/bin")," for pathless access"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"tar xvf openshift-install-linux-4.16.5.tar.gz \ntar xvf openshift-client-linux-4.16.5.tar.gz\n")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash",metastring:'title="Adding to path"',title:'"Adding',to:!0,'path"':!0},"sudo cp kubectl /usr/local/bin\nsudo cp oc /usr/local/bin\nsudo cp openshift-install /usr/local/bin\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Go to the ",(0,r.yg)("a",{parentName:"p",href:"https://console.redhat.com/openshift/install/nutanix/installer-provisioned"},"IPI Installer Web Console")," and click on ",(0,r.yg)("strong",{parentName:"p"},"Copy pull secret")," button")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Now that the pull secret value is in your clipboard, paste the contents string to a pull secret file in the same directory"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"vi pull_secret.json\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Make sure all the files are in the ocpuserXX directory "),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"ls -l \n")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash",metastring:'{5} title="Directory listing"',"{5}":!0,title:'"Directory','listing"':!0},"-rwxr-xr-x 2 root root 123877776 Aug 29 16:30 kubectl\n-rwxr-xr-x 2 root root 123877776 Aug 29 16:30 oc\ndrwxr-x--- 2 root root      4096 Sep 22 06:56 openshift\n-rwxr-xr-x 1 root root 481972224 Sep  1 16:07 openshift-install\n-rw-r--r-- 1 root root      2819 Sep 22 05:27 pull_secret.json\n")))),(0,r.yg)("h3",{id:"creating-and-installing-ssl-certificate-on-prism-central"},"Creating and Installing SSL Certificate on Prism Central"),(0,r.yg)("admonition",{title:"Sharing a Nutanix Cluster?",type:"danger"},(0,r.yg)("p",{parentName:"admonition"},"Only one person needs to do this section for generate and install SSL certificates for Prism Central."),(0,r.yg)("p",{parentName:"admonition"},"If you are sharing a HPOC for multiple users, then you need to do this section only once. Decide with other participants sharing your cluster before proceeding."),(0,r.yg)("p",{parentName:"admonition"},"Share the ",(0,r.yg)("inlineCode",{parentName:"p"},"rootCA.crt")," certificate with the other users so they can use this to create OCP cluster.")),(0,r.yg)("p",null,"In this section we will do the following:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Create a Root CA on your UserXX-LinuxToolsVM"),(0,r.yg)("li",{parentName:"ul"},"Create a Certificate Signing Request (CSR) for Prism Central "),(0,r.yg)("li",{parentName:"ul"},"Sign the CSR using Root CA's private key")),(0,r.yg)("p",null,"All this will be done on the UserXX-LinuxToolsVM."),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"In the UserXX-LinuxToolsVM, Create a the Root CA certificates"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"openssl genrsa -des3 -out rootCA.key 2048\n")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-text",metastring:'title="Execution example - make sure to retype the input values as shown here"',title:'"Execution',example:!0,"-":!0,make:!0,sure:!0,to:!0,retype:!0,the:!0,input:!0,values:!0,as:!0,shown:!0,'here"':!0},"# openssl genrsa -des3 -out rootCA.key 2048\n#\nEnter PEM pass phrase:              << Enter a passphrase (of at least 4 characters)\nVerifying - Enter PEM pass phrase:  << Re-enter the passphrase for confirmation\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Enter this command to create the pem file for rootCA "),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"openssl req -x509 -new -nodes -key rootCA.key -sha256 -days 1825 -out rootCA.crt\n")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-text",metastring:'title="Execution example - make sure to retype the input values as shown here"',title:'"Execution',example:!0,"-":!0,make:!0,sure:!0,to:!0,retype:!0,the:!0,input:!0,values:!0,as:!0,shown:!0,'here"':!0},"openssl req -x509 -new -nodes -key rootCA.key -sha256 -days 1825 -out rootCA.crt\n#\nEnter pass phrase for rootCA.key:   << Enter the passphrase created during .key file generation of rootCA\nYou are about to be asked to enter information that will be incorporated\ninto your certificate request.\nWhat you are about to enter is what is called a Distinguished Name or a DN.\nThere are quite a few fields but you can leave some blank\nFor some fields there will be a default value,\nIf you enter '.', the field will be left blank.\n-----\nCountry Name (2 letter code) [XX]:JP\nState or Province Name (full name) []:Chiba\nLocality Name (eg, city) [Default City]:Kashiwa\nOrganization Name (eg, company) [Default Company Ltd]:nutanix\nOrganizational Unit Name (eg, section) []:rootca\nCommon Name (eg, your name or your server's hostname) []:rootca.ntnxlab.local\nEmail Address []:first.last@nutanix.com\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Create the following script. This script will be used to generate certificates for your Prism Central (can also be used to other servers)"),(0,r.yg)("p",{parentName:"li"},"with the following name:"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"vi gencert.sh\n")),(0,r.yg)("p",{parentName:"li"},"Paste the following content in the script:"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-text"},'#!/bin/bash\n\n# Check if the number of arguments is at least 1 and at most 2\nif [ "$#" -lt 1 ] || [ "$#" -gt 2 ]; then\n   echo "Usage: $0 <server-fqdn> [optional-second-dns]"\n   exit 1\nfi\n\n# Assign the first argument to DOMAIN\nDOMAIN=$1\n\n# Assign the second argument to SECOND_DOMAIN, if provided\nSECOND_DOMAIN=$2\n\n# Generate private key and csr for the DOMAIN\nopenssl genrsa -out $DOMAIN.key 2048\nopenssl req -new -key $DOMAIN.key -out $DOMAIN.csr\n\n# Create a .ext file with SAN names for your DOMAIN and optional SECOND_DOMAIN\ncat > $DOMAIN.ext << EOF\nauthorityKeyIdentifier=keyid,issuer\nbasicConstraints=CA:FALSE\nkeyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment\nsubjectAltName = @alt_names\n[alt_names]\nDNS.1 = $DOMAIN\nEOF\n\n# Add SECOND_DOMAIN to the .ext file if it was provided\nif [ -n "$SECOND_DOMAIN" ]; then\ncat >> $DOMAIN.ext << EOF\nDNS.2 = $SECOND_DOMAIN\nEOF\nfi\n\n# Sign the csr using the rootCA key and cert\nopenssl x509 -req -in $DOMAIN.csr -CA rootCA.crt -CAkey rootCA.key \\\n-CAcreateserial -out $DOMAIN.crt -days 825 -sha256 -extfile $DOMAIN.ext\n'))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Provide execute permission to the script and execute it"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"chmod u+x gencert.sh\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Generate certificate(.pem) and private key (.key) for your Prism Central server"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"# Format\n# ./gencert.sh <server fqdn>\n\n./gencert.sh pc.ntnxlab.local\n")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-text",metastring:'title="Execution example - make sure to retype the input values as shown here"',title:'"Execution',example:!0,"-":!0,make:!0,sure:!0,to:!0,retype:!0,the:!0,input:!0,values:!0,as:!0,shown:!0,'here"':!0},"./gencert.sh pc.ntnxlab.local\n#\nYou are about to be asked to enter information that will be incorporated\ninto your certificate request.\nWhat you are about to enter is what is called a Distinguished Name or a DN.\nThere are quite a few fields but you can leave some blank\nFor some fields there will be a default value,\nIf you enter '.', the field will be left blank.\n-----\nCountry Name (2 letter code) [XX]:JP\nState or Province Name (full name) []:Chiba\nLocality Name (eg, city) [Default City]:Kashiwa\nOrganization Name (eg, company) [Default Company Ltd]:nutanix\nOrganizational Unit Name (eg, section) []:pc\nCommon Name (eg, your name or your server's hostname) []:pc.ntnxlab.local\nEmail Address []:first.last@nutanix.com\n\nPlease enter the following 'extra' attributes\nto be sent with your certificate request\nA challenge password []:             << Enter a passphrase (of at least 4 characters)\nAn optional company name []:nutanix\nCertificate request self-signature ok\nsubject=C = JP, ST = Chiba, L = Kashiwa, O = pc, OU = pc, CN = pc.ntnxlab.local, emailAddress = first.last@nutanix.com\nEnter pass phrase for rootCA.key:    << Enter the passphrase created during .key file generation of rootCA\n")))),(0,r.yg)("ol",{start:7},(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"List the contents of the directory to make sure pc.crt, pc.key and rootCA.crt files are present"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"ls -l *.pem *.crt *.key | awk '{print $9}'\n")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash",metastring:'title="Output"',title:'"Output"'},"pc.ntnxlab.local.crt               ## Prism Central's public certificate signed by Root CA\npc.ntnxlab.local.key               ## Prism Central's private key\nrootCA.crt                         ## Root CA's public certificate\nrootCA.key                         ## Root CA's private key\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("inlineCode",{parentName:"p"},"cat")," out the contents of ",(0,r.yg)("inlineCode",{parentName:"p"},"rootCA.crt"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"pc.ntnxlab.local.key")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"pc.ntnxlab.local.crt")," and copy them to the UserXX-WindowsToolsPC in separate files"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-buttonless"},"cat rootCA.crt\ncat pc.ntnxlab.local.key\ncat pc.ntnxlab.local.crt\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"In UserXX-WindowsToolsPC, use Notepad to create three new files with the same names")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Copy the ouput of previous cat command of ",(0,r.yg)("inlineCode",{parentName:"p"},"rootCA.crt"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"pc.ntnxlab.local.key")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"pc.ntnxlab.local.crt")," files into to your UserXX-WindowsToolsPC VM in any directory"),(0,r.yg)("p",{parentName:"li"},(0,r.yg)("img",{src:a(8728).A,width:"925",height:"416"}))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Logon to Prism Central Web GUI on the WindowsToolsVM"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-url"},"https://pc.ntnxlab.local/\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Go to ",(0,r.yg)("strong",{parentName:"p"},"Settings > SSL Certificate"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Click on ",(0,r.yg)("strong",{parentName:"p"},"Replace Certificate")," ")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Select ",(0,r.yg)("strong",{parentName:"p"},"Import Key and Certificate"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Click ",(0,r.yg)("strong",{parentName:"p"},"Next"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Choose the following:"),(0,r.yg)("blockquote",{parentName:"li"},(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("strong",{parentName:"p"},"Private Key Type")," - RSA 2048 bit ")),(0,r.yg)("blockquote",{parentName:"li"},(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("strong",{parentName:"p"},"Private Key")," - ",(0,r.yg)("inlineCode",{parentName:"p"},"pc.ntnxlab.local.key"))),(0,r.yg)("blockquote",{parentName:"li"},(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("strong",{parentName:"p"},"Public Certificate")," - ",(0,r.yg)("inlineCode",{parentName:"p"},"pc.ntnxlab.local.crt"))),(0,r.yg)("blockquote",{parentName:"li"},(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("strong",{parentName:"p"},"CA Certificate/Chain")," - ",(0,r.yg)("inlineCode",{parentName:"p"},"rootCA.crt"))),(0,r.yg)("p",{parentName:"li"},(0,r.yg)("img",{src:a(8728).A,width:"925",height:"416"}))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Click on ",(0,r.yg)("strong",{parentName:"p"},"Import Files")),(0,r.yg)("p",{parentName:"li"},(0,r.yg)("img",{src:a(6100).A,width:"410",height:"525"}))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Prism Central GUI will accept the certificate and restart for the changes to take effect. "),(0,r.yg)("p",{parentName:"li"},(0,r.yg)("img",{src:a(2877).A,width:"441",height:"264"})),(0,r.yg)("p",{parentName:"li"},"You have now successfully installed SSL certificate on Prism Central."),(0,r.yg)("admonition",{parentName:"li",type:"caution"},(0,r.yg)("p",{parentName:"admonition"},"Do not proceed to the next steps until Prism Central Certificate is installed without errors. "),(0,r.yg)("p",{parentName:"admonition"},"Contact your lab instructors if you need help with troubleshooting SSL certificate issues."))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"To make sure that the WindowsToolsPC has the rootCA certificate installed in the local, double click on the ",(0,r.yg)("inlineCode",{parentName:"p"},"rootCA.crt")," file in windows file explorer and select ",(0,r.yg)("strong",{parentName:"p"},"install Certificate")),(0,r.yg)("p",{parentName:"li"},(0,r.yg)("img",{src:a(4971).A,width:"622",height:"521"}))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Choose ",(0,r.yg)("strong",{parentName:"p"},"Local Machine")," as Store Location and click ",(0,r.yg)("strong",{parentName:"p"},"Next"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Choose ",(0,r.yg)("strong",{parentName:"p"},"Place all certificates in the following store")," and click ",(0,r.yg)("strong",{parentName:"p"},"Browse"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Choose ",(0,r.yg)("strong",{parentName:"p"},"Trusted Root Certification Authorities")," and click ",(0,r.yg)("strong",{parentName:"p"},"Next"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Click on ",(0,r.yg)("strong",{parentName:"p"},"Finish"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"You will notice that the browser has no warning about about an untrusted PC site "),(0,r.yg)("admonition",{parentName:"li",type:"tip"},(0,r.yg)("p",{parentName:"admonition"},"You may need to restart your browser if this isn't showing as a trusted site.")),(0,r.yg)("p",{parentName:"li"},(0,r.yg)("img",{src:a(7256).A,width:"1071",height:"709"})),(0,r.yg)("p",{parentName:"li"},"You have completed the configuring SSL certificate pre-requisites for IPI installation. "))),(0,r.yg)("h3",{id:"setting-up-cloud-credential-operator-utility-ccoctl"},"Setting up Cloud Credential Operator Utility (CCOCTL)"),(0,r.yg)("p",null,"Setting up of is necessary for Nutanix cluster credentials to be used with OCP cluster. "),(0,r.yg)("p",null,"Refer to ",(0,r.yg)("a",{parentName:"p",href:"https://docs.openshift.com/container-platform/4.7/authentication/managing_cloud_provider_credentials/about-cloud-credential-operator.html"},"Cloud Credential Operator CCO")," for more information. "),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"In the UserXX-LinuxToolsVM, download and setup ",(0,r.yg)("inlineCode",{parentName:"p"},"ccoctl")," using the following commands"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"cd $HOME/ocpuserXX # e.g. cd $HOME/ocpuser01\n")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"RELEASE_IMAGE=$(openshift-install version | awk '/release image/ {print $3}')\n")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"CCO_IMAGE=$(oc adm release info --image-for='cloud-credential-operator' $RELEASE_IMAGE)\n")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},'oc image extract $CCO_IMAGE --file="/usr/bin/ccoctl" -a pull_secret.json\n')),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"chmod u+x ccoctl\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Make sure the ccoctl file is present "),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"ls -lh ccoctl \n")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash",metastring:'title="Output"',title:'"Output"'},"-rwxr----- 1 ubuntu ubuntu Apr 19 00:41 ccoctl\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Create a Prism Central credentials file in ",(0,r.yg)("inlineCode",{parentName:"p"},"creds")," directory"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash",metastring:"{8,9}","{8,9}":!0},'mkdir creds\n##\ncat << EOF > creds/pc_credentials.yaml\ncredentials:\n- type: basic_auth\n  data:\n    prismCentral:\n      username: "admin"\n      password: "PC-PASSWORD"\nEOF\n'))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Edit the ",(0,r.yg)("inlineCode",{parentName:"p"},"pc_credentials.yaml")," file to change your Prism Central password"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"vi creds/pc_credentials.yaml\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Extract the CredentialsRequests objects for Nutanix Prism Central and store in a ",(0,r.yg)("inlineCode",{parentName:"p"},"credreqs")," directory"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"oc adm release extract --credentials-requests --cloud=nutanix --to=credreqs -a pull_secret.json $RELEASE_IMAGE\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Use the ccoctl tool to process the CredentialsRequests objects and generate secret manifest files. These manifests file will be used during OCP cluster Certification"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"./ccoctl nutanix create-shared-secrets --credentials-requests-dir=credreqs --output-dir=. --credentials-source-filepath=creds/pc_credentials.yaml\n")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-buttonless",metastring:'title="Output"',title:'"Output"'},"2022/09/29 23:53:36 Saved credentials configuration to: manifests/openshift-machine-api-nutanix-credentials-credentials.yaml\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Check the ",(0,r.yg)("inlineCode",{parentName:"p"},"openshift-machine-api-nutanix-credentials-credentials.yaml")," file to make sure the contents are good using ",(0,r.yg)("inlineCode",{parentName:"p"},"cat")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"cat manifests/openshift-machine-api-nutanix-credentials-credentials.yaml\n")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-buttonless",metastring:'{8} title="Your credentials will be different"',"{8}":!0,title:'"Your',credentials:!0,will:!0,be:!0,'different"':!0},"apiVersion: v1\nkind: Secret\nmetadata:\n   name: nutanix-credentials\n   namespace: openshift-machine-api\ntype: Opaque\ndata:\n   credentials: W3sidHlwZSI6ImJhc2ljX2F1dGgiLCJkYXRhIjp7InByaXNtQ2VudHJhbCI6eyJ1c2VybmFtZSI6ImFkbWluIiwicGFzc3dvcmQiOiJ0ZWNoWDIwMjAhIn0sInByaXNtRWxlbWVudHMiOm51bGx9fV0=\n")))),(0,r.yg)("p",null,"Now that we have all pre-requisites completed, let us move on to creating the OCP cluster IPI installation manifest"))}d.isMDXComponent=!0},8728:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/certs-on-wintools-54cacbd7b8f33c645ed9fd8303da6395.png"},6100:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/import-certs-c67cb70ddc8ab5c92d0970e0acad1da2.png"},4971:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/install-rootCA-009b58bcaf7e2aa262de0cf422f91314.png"},2877:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/pc-crt-installed-452f74cbe7f3751ec61f46b6ecd22829.png"},7256:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/trusted-pc-6662d370eb4ddb64be854cc28db7ca7b.png"}}]);