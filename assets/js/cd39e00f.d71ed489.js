"use strict";(self.webpackChunkocp_gitp=self.webpackChunkocp_gitp||[]).push([[5975],{5680:(e,a,t)=>{t.d(a,{xA:()=>c,yg:()=>d});var n=t(6540);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function l(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?l(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=n.createContext({}),p=function(e){var a=n.useContext(s),t=a;return e&&(t="function"==typeof e?e(a):o(o({},a),e)),t},c=function(e){var a=p(e.components);return n.createElement(s.Provider,{value:a},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},g=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(t),g=r,d=m["".concat(s,".").concat(g)]||m[g]||u[g]||l;return t?n.createElement(d,o(o({ref:a},c),{},{components:t})):n.createElement(d,o({ref:a},c))}));function d(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var l=t.length,o=new Array(l);o[0]=g;var i={};for(var s in a)hasOwnProperty.call(a,s)&&(i[s]=a[s]);i.originalType=e,i[m]="string"==typeof e?e:r,o[1]=i;for(var p=2;p<l;p++)o[p]=t[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}g.displayName="MDXCreateElement"},9365:(e,a,t)=>{t.d(a,{A:()=>o});var n=t(6540),r=t(53);const l={tabItem:"tabItem_Ymn6"};function o(e){let{children:a,hidden:t,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.A)(l.tabItem,o),hidden:t},a)}},1470:(e,a,t)=>{t.d(a,{A:()=>v});var n=t(8168),r=t(6540),l=t(53),o=t(3104),i=t(6347),s=t(7485),p=t(1682),c=t(9466);function m(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:a}=e;return!!a&&"object"==typeof a&&"value"in a}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:a,label:t,attributes:n,default:r}}=e;return{value:a,label:t,attributes:n,default:r}}))}function u(e){const{values:a,children:t}=e;return(0,r.useMemo)((()=>{const e=a??m(t);return function(e){const a=(0,p.X)(e,((e,a)=>e.value===a.value));if(a.length>0)throw new Error(`Docusaurus error: Duplicate values "${a.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[a,t])}function g(e){let{value:a,tabValues:t}=e;return t.some((e=>e.value===a))}function d(e){let{queryString:a=!1,groupId:t}=e;const n=(0,i.W6)(),l=function(e){let{queryString:a=!1,groupId:t}=e;if("string"==typeof a)return a;if(!1===a)return null;if(!0===a&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:a,groupId:t});return[(0,s.aZ)(l),(0,r.useCallback)((e=>{if(!l)return;const a=new URLSearchParams(n.location.search);a.set(l,e),n.replace({...n.location,search:a.toString()})}),[l,n])]}function y(e){const{defaultValue:a,queryString:t=!1,groupId:n}=e,l=u(e),[o,i]=(0,r.useState)((()=>function(e){let{defaultValue:a,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(a){if(!g({value:a,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${a}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return a}const n=t.find((e=>e.default))??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:a,tabValues:l}))),[s,p]=d({queryString:t,groupId:n}),[m,y]=function(e){let{groupId:a}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(a),[n,l]=(0,c.Dv)(t);return[n,(0,r.useCallback)((e=>{t&&l.set(e)}),[t,l])]}({groupId:n}),N=(()=>{const e=s??m;return g({value:e,tabValues:l})?e:null})();(0,r.useLayoutEffect)((()=>{N&&i(N)}),[N]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!g({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);i(e),p(e),y(e)}),[p,y,l]),tabValues:l}}var N=t(2303);const h={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function f(e){let{className:a,block:t,selectedValue:i,selectValue:s,tabValues:p}=e;const c=[],{blockElementScrollPositionUntilNextRender:m}=(0,o.a_)(),u=e=>{const a=e.currentTarget,t=c.indexOf(a),n=p[t].value;n!==i&&(m(a),s(n))},g=e=>{let a=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;a=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;a=c[t]??c[c.length-1];break}}a?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.A)("tabs",{"tabs--block":t},a)},p.map((e=>{let{value:a,label:t,attributes:o}=e;return r.createElement("li",(0,n.A)({role:"tab",tabIndex:i===a?0:-1,"aria-selected":i===a,key:a,ref:e=>c.push(e),onKeyDown:g,onClick:u},o,{className:(0,l.A)("tabs__item",h.tabItem,o?.className,{"tabs__item--active":i===a})}),t??a)})))}function b(e){let{lazy:a,children:t,selectedValue:n}=e;const l=(Array.isArray(t)?t:[t]).filter(Boolean);if(a){const e=l.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},l.map(((e,a)=>(0,r.cloneElement)(e,{key:a,hidden:e.props.value!==n}))))}function C(e){const a=y(e);return r.createElement("div",{className:(0,l.A)("tabs-container",h.tabList)},r.createElement(f,(0,n.A)({},e,a)),r.createElement(b,(0,n.A)({},e,a)))}function v(e){const a=(0,N.A)();return r.createElement(C,(0,n.A)({key:String(a)},e))}},1419:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>p,toc:()=>m});var n=t(8168),r=(t(6540),t(5680)),l=t(1470),o=t(9365);const i={title:"Pre-requisites",lastupdate:"git",lastupdateauthor:"git"},s=void 0,p={unversionedId:"ocp_ipi_install/ocp_ipi_pre_reqs",id:"ocp_ipi_install/ocp_ipi_pre_reqs",title:"Pre-requisites",description:"Preparing Pre-requisites",source:"@site/docs/ocp_ipi_install/ocp_ipi_pre_reqs.md",sourceDirName:"ocp_ipi_install",slug:"/ocp_ipi_install/ocp_ipi_pre_reqs",permalink:"/ocp_ipi_install/ocp_ipi_pre_reqs",draft:!1,editUrl:"https://github.com/ariesbabu/ocp-gitp/edit/main/docs/ocp_ipi_install/ocp_ipi_pre_reqs.md",tags:[],version:"current",frontMatter:{title:"Pre-requisites",lastupdate:"git",lastupdateauthor:"git"},sidebar:"tutorialSidebar",previous:{title:"IPI Introduction",permalink:"/ocp_ipi_install/ocp_ipi_intro"},next:{title:"Create Configuration Manifests",permalink:"/ocp_ipi_install/ocp_ipi_config_file"}},c={},m=[{value:"Preparing Pre-requisites",id:"preparing-pre-requisites",level:2},{value:"Preparing your HPOC cluster",id:"preparing-your-hpoc-cluster",level:3},{value:"AHV Networking",id:"ahv-networking",level:3},{value:"Add DNS Records",id:"add-dns-records",level:3},{value:"Downloading OCP Tools",id:"downloading-ocp-tools",level:3},{value:"Creating and Installing SSL Certificate on Prism Central",id:"creating-and-installing-ssl-certificate-on-prism-central",level:3},{value:"Setting up Cloud Credential Operator Utility (CCOCTL)",id:"setting-up-cloud-credential-operator-utility-ccoctl",level:3}],u={toc:m},g="wrapper";function d(e){let{components:a,...i}=e;return(0,r.yg)(g,(0,n.A)({},u,i,{components:a,mdxType:"MDXLayout"}),(0,r.yg)("h2",{id:"preparing-pre-requisites"},"Preparing Pre-requisites"),(0,r.yg)("p",null,"We will be deploying OCP cluster using IPI method once the following pre-requisites are met. Be sure to make sure all pre-requisites are prepared."),(0,r.yg)("h3",{id:"preparing-your-hpoc-cluster"},"Preparing your HPOC cluster"),(0,r.yg)("admonition",{title:"Do you have enough compute resources?",type:"caution"},(0,r.yg)("p",{parentName:"admonition"},"We have planned enough resources in Nutanix cluster for you to deploy OCP cluster and workloads as well. "),(0,r.yg)("p",{parentName:"admonition"},"For latest OCP resource requirements refer to OpenShift portal ",(0,r.yg)("a",{parentName:"p",href:"https://docs.openshift.com/container-platform/4.9/installing/installing_platform_agnostic/installing-platform-agnostic.html#installation-minimum-resource-requirements_installing-platform-agnostic"},"here.")),(0,r.yg)("p",{parentName:"admonition"},"At the time of writing this document the following resources are created by OCP IPI installer."),(0,r.yg)("table",{parentName:"admonition"},(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"OCP Role"),(0,r.yg)("th",{parentName:"tr",align:null},"Operating System"),(0,r.yg)("th",{parentName:"tr",align:null},"vCPU"),(0,r.yg)("th",{parentName:"tr",align:null},"RAM"),(0,r.yg)("th",{parentName:"tr",align:null},"Storage"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Master   x 3"),(0,r.yg)("td",{parentName:"tr",align:null},"RHCOS"),(0,r.yg)("td",{parentName:"tr",align:null},"8"),(0,r.yg)("td",{parentName:"tr",align:null},"16 GB"),(0,r.yg)("td",{parentName:"tr",align:null},"120 GB")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Worker    x 2"),(0,r.yg)("td",{parentName:"tr",align:null},"RHCOS, RHEL 7.9, or RHEL 8.4"),(0,r.yg)("td",{parentName:"tr",align:null},"4"),(0,r.yg)("td",{parentName:"tr",align:null},"16 GB"),(0,r.yg)("td",{parentName:"tr",align:null},"120 GB")))),(0,r.yg)("blockquote",{parentName:"admonition"},(0,r.yg)("p",{parentName:"blockquote"},"Additional space for bootstrap vms (deleted after install) and RHCOS image files are also accounted for."))),(0,r.yg)("h3",{id:"ahv-networking"},"AHV Networking"),(0,r.yg)("p",null,"We will first find two IPs for OCP ",(0,r.yg)("inlineCode",{parentName:"p"},"api")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"apps")," ingress endpoints in our network and add it to the ",(0,r.yg)("strong",{parentName:"p"},"Primary")," IPAM network blacklist. "),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Find the CIDR range for your  ",(0,r.yg)("strong",{parentName:"p"},"Primary")," IPAM network either from ",(0,r.yg)("a",{parentName:"p",href:"https://rx.corp.nutanix.com/"},"RX")," or from your instrutor"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-buttonless",metastring:'title="CIDR example for your Nutanix cluster"',title:'"CIDR',example:!0,for:!0,your:!0,Nutanix:!0,'cluster"':!0},"10.38.18.192/26\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Logon to your ",(0,r.yg)("inlineCode",{parentName:"p"},"UserXX-LinuxToolsVM")," Terminal in the browser using ",(0,r.yg)("inlineCode",{parentName:"p"},"code-server")," that you installed in the previous section")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Find two unused static IP addresses"),(0,r.yg)(l.A,{mdxType:"Tabs"},(0,r.yg)(o.A,{value:"Template Command",label:"Template Command",default:!0,mdxType:"TabItem"},(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"nmap -v -sn 10.x.x.x/x # use Nutanix Cluster's IPAM CIDR\n"))),(0,r.yg)(o.A,{value:"Example Command",label:"Example Command",mdxType:"TabItem"},(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"nmap -v -sn 10.38.18.192/26 # use Nutanix Cluster's IPAM CIDR\n")))),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-text",metastring:'{1,2} title="Sample output - choose the first two consecutive IPs"',"{1,2}":!0,title:'"Sample',output:!0,"-":!0,choose:!0,the:!0,first:!0,two:!0,consecutive:!0,'IPs"':!0},"Nmap scan report for 10.38.18.219 [host down] \nNmap scan report for 10.38.18.220 [host down]\nNmap scan report for 10.38.18.221\nHost is up (-0.098s latency).\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Logon to any CVM in your cluster and execute the following to add chosen static IPs to the ",(0,r.yg)("strong",{parentName:"p"},"Primary")," IPAM network"),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"Username: nutanix"),(0,r.yg)("li",{parentName:"ul"},"Password: your cluster password # Use Lookup Tool to find your CVM/PE Cluster password")),(0,r.yg)(l.A,{mdxType:"Tabs"},(0,r.yg)(o.A,{value:"Template Command",label:"Template Command",default:!0,mdxType:"TabItem"},(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"acli net.add_to_ip_blacklist <your-ipam-ahv-network> ip_list=10.38.18.219,10.38.18.220\n"))),(0,r.yg)(o.A,{value:"Example Command",label:"Example Command",mdxType:"TabItem"},(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash",metastring:'title="Sample command"',title:'"Sample','command"':!0},"acli net.add_to_ip_blacklist Primary ip_list=10.38.18.219,10.38.18.220\n")))))),(0,r.yg)("h3",{id:"add-dns-records"},"Add DNS Records"),(0,r.yg)("p",null,"In this section we will add PC, API and APPS Ingress DNS records for lookup by OCP IPI installer."),(0,r.yg)("p",null,"Your OCP cluster's name becomes a subdomain in your DNS zone ",(0,r.yg)("inlineCode",{parentName:"p"},"ntnxlab.local"),". All OCP cluster related lookups are located within subdomain."),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Main domain -  ",(0,r.yg)("inlineCode",{parentName:"li"},"ntnxlab.local")," (this gets created with your HPOC reservation)",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"Sub domain - ",(0,r.yg)("inlineCode",{parentName:"li"},"ocpuserXX.ntnxlab.local")," (e.g. ocpuser01, ocpuser02, etc, is your OCP cluster's name)")))),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Logon to the ",(0,r.yg)("inlineCode",{parentName:"p"},"AutoAD")," windows VM "),(0,r.yg)("blockquote",{parentName:"li"},(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("strong",{parentName:"p"},"Username"),": administrator")),(0,r.yg)("blockquote",{parentName:"li"},(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("strong",{parentName:"p"},"Password"),": default # Use lookup tool to find the password "))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"We will add the following entries to DNS server using the two consecutive IPs you found in the previous section"),(0,r.yg)("admonition",{parentName:"li",title:"Use your assigned HPOC cluster's IP Addresses",type:"caution"},(0,r.yg)("p",{parentName:"admonition"},"The IP addresses in the following commands are used as an example. You should use IP address details that belong to your HPOC cluster. "),(0,r.yg)("p",{parentName:"admonition"},"For information on locating your cluster IP see ",(0,r.yg)("a",{parentName:"p",href:"https://lookupamer.apj-cxrules.win"},"Lookup")," website.")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-buttonless"},"10.38.18.219   api.ocpuserXX.ntnxlab.local\n10.38.18.220   *.apps.ocpuserXX.ntnxlab.local\n10.38.18.201   pc.ntnxlab.local\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Open PowerShell ISE as Administrator and create the two A records"),(0,r.yg)("admonition",{parentName:"li",type:"caution"},(0,r.yg)("p",{parentName:"admonition"},"Create entry for Prism Central (pc) only if it is not present")),(0,r.yg)(l.A,{mdxType:"Tabs"},(0,r.yg)(o.A,{value:"Template commands",mdxType:"TabItem"},(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-PowerShell",metastring:'title="Add the API A record - use your own subdomain"',title:'"Add',the:!0,API:!0,A:!0,record:!0,"-":!0,use:!0,your:!0,own:!0,'subdomain"':!0},"Add-DnsServerResourceRecordA -Name api.<ocpuserXX> -IPv4Address <your API IP> -ZoneName ntnxlab.local -ZoneScope ntnxlab.local\n")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-PowerShell",metastring:'title="Add the apps Ingress A record - use your own subdomain"',title:'"Add',the:!0,apps:!0,Ingress:!0,A:!0,record:!0,"-":!0,use:!0,your:!0,own:!0,'subdomain"':!0},"Add-DnsServerResourceRecordA -Name *.apps.<ocpuserXX> -IPv4Address <your Ingress IP> -ZoneName ntnxlab.local -ZoneScope ntnxlab.local \n")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-PowerShell",metastring:'title="Optional - Add the Prism Central A record - if not present"',title:'"Optional',"-":!0,Add:!0,the:!0,Prism:!0,Central:!0,A:!0,record:!0,if:!0,not:!0,'present"':!0},"Add-DnsServerResourceRecordA -Name pc -IPv4Address <your PC IP> -ZoneName ntnxlab.local -ZoneScope ntnxlab.local \n"))),(0,r.yg)(o.A,{value:"Sample commands",mdxType:"TabItem"},(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-buttonless",metastring:"title=\"Sample commands with 'ocpuser01' as a subdomain and your OCP cluster name\"",title:'"Sample',commands:!0,with:!0,"'ocpuser01'":!0,as:!0,a:!0,subdomain:!0,and:!0,your:!0,OCP:!0,cluster:!0,'name"':!0},"Add-DnsServerResourceRecordA -Name api.ocpuser01 -IPv4Address 10.38.18.219 -ZoneName ntnxlab.local -ZoneScope ntnxlab.local\nAdd-DnsServerResourceRecordA -Name *.apps.ocpuser01 -IPv4Address 10.38.18.220 -ZoneName ntnxlab.local -ZoneScope ntnxlab.local \n")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-PowerShell",metastring:'title="Optional - Add the Prism Central A record - if not present"',title:'"Optional',"-":!0,Add:!0,the:!0,Prism:!0,Central:!0,A:!0,record:!0,if:!0,not:!0,'present"':!0},"Add-DnsServerResourceRecordA -Name pc -IPv4Address 10.38.18.201 -ZoneName ntnxlab.local -ZoneScope ntnxlab.local\n"))))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Test name resolution for added entries from ",(0,r.yg)("inlineCode",{parentName:"p"},"AutoAD")," VM"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-PowerShell",metastring:"{6}","{6}":!0},"nslookup api.ocpuser01.ntnxlab.local\nServer: dc.ntnxlab.local\nAddress: 10.38.18.203\n\nName: api.ocpuser01.ntnxlab.local\nAddress: 10.38.18.219 \n")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash",metastring:"{6}","{6}":!0},"nslookup myapp.apps.ocpuser01.ntnxlab.local\nServer: dc.ntnxlab.local\nAddress: 10.38.18.203\n\nName: myapp.apps.ocpuser01.ntnxlab.local\nAddress: 10.38.18.220\n")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash",metastring:"{6}","{6}":!0},"nslookup pc.ntnxlab.local\nServer: dc.ntnxlab.local\nAddress: 10.38.18.203\n\nName: pc.ntnxlab.local\nAddress: 10.38.3.201\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Test name resolution for added entries from ",(0,r.yg)("inlineCode",{parentName:"p"},"UserXX-LinuxToolsVM")))),(0,r.yg)("h3",{id:"downloading-ocp-tools"},"Downloading OCP Tools"),(0,r.yg)("p",null,"We will need to the OCP tools mentioned in the pre-requisites section to prepare our environment"),(0,r.yg)("admonition",{title:"OCP Tools information",type:"info"},(0,r.yg)("p",{parentName:"admonition"},"You can get the URLs to download the tools and pull secret from RedHat Console: "),(0,r.yg)("p",{parentName:"admonition"},"Openshift > Clusters > Create Clusters > Datacenter > ",(0,r.yg)("a",{parentName:"p",href:"https://console.redhat.com/openshift/install/nutanix/installer-provisioned"},"Nutanix AOS")),(0,r.yg)("p",{parentName:"admonition"},"In this section please using the download links provided is also ok. ")),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Logon to ",(0,r.yg)("inlineCode",{parentName:"p"},"UserXX-LinuxToolsVM")," ")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Go to Terminal in ",(0,r.yg)("inlineCode",{parentName:"p"},"VSCode")," on the browser")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Create a folder under your user name from cluster lookup site (if you are in a lab environment)"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash",metastring:'title="Use your user number - for example ocpuser01"',title:'"Use',your:!0,user:!0,number:!0,"-":!0,for:!0,example:!0,'ocpuser01"':!0},"cd $HOME\nmkdir ocpuserXX # e.g. `mkdir ocpuser01` / mkdir ocpuser01\ncd ocpuserXX    # e.g. cd ocpuser01\ncurl -O https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/latest/openshift-client-linux.tar.gz\ncurl -O https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/latest/openshift-install-linux.tar.gz\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Extract the binaries and copy them to ",(0,r.yg)("inlineCode",{parentName:"p"},"/usr/local/bin")," for pathless access"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"tar xvf openshift-install-linux.tar.gz \ntar xvf openshift-client-linux.tar.gz\n")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash",metastring:'title="Adding to path"',title:'"Adding',to:!0,'path"':!0},"sudo cp kubectl /usr/local/bin\nsudo cp oc /usr/local/bin\nsudo cp openshift-install /usr/local/bin\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Go to the ",(0,r.yg)("a",{parentName:"p",href:"https://console.redhat.com/openshift/install/nutanix/installer-provisioned"},"IPI Installer Web Console")," and click on ",(0,r.yg)("strong",{parentName:"p"},"Copy pull secret")," button")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Now that the pull secret value is in your clipboard, paste the contents string to a pull secret file in the same directory"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"vi pull_secret.json\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Make sure all the files are in the ocpuserXX directory "),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"ls -l \n")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash",metastring:'{5} title="Directory listing"',"{5}":!0,title:'"Directory','listing"':!0},"-rwxr-xr-x 2 root root 123877776 Aug 29 16:30 kubectl\n-rwxr-xr-x 2 root root 123877776 Aug 29 16:30 oc\ndrwxr-x--- 2 root root      4096 Sep 22 06:56 openshift\n-rwxr-xr-x 1 root root 481972224 Sep  1 16:07 openshift-install\n-rw-r--r-- 1 root root      2819 Sep 22 05:27 pull_secret.json\n")))),(0,r.yg)("h3",{id:"creating-and-installing-ssl-certificate-on-prism-central"},"Creating and Installing SSL Certificate on Prism Central"),(0,r.yg)("admonition",{title:"Sharing a Nutanix Cluster?",type:"danger"},(0,r.yg)("p",{parentName:"admonition"},"Only one person needs to do this section for generate and install SSL certificates for Prism Central."),(0,r.yg)("p",{parentName:"admonition"},"If you are sharing a HPOC for multiple users, then you need to do this section only once. Decide with other participants sharing your cluster before proceeding."),(0,r.yg)("p",{parentName:"admonition"},"If you are the certificate admin, share the ",(0,r.yg)("inlineCode",{parentName:"p"},"rootCA.crt")," certificate with the other users so they can use this to create OCP cluster.")),(0,r.yg)("p",null,"In this section we will do the following:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Create a Root CA on your ",(0,r.yg)("inlineCode",{parentName:"li"},"UserXX-LinuxToolsVM")),(0,r.yg)("li",{parentName:"ul"},"Create a Certificate Signing Request (CSR) for Prism Central "),(0,r.yg)("li",{parentName:"ul"},"Sign the CSR using Root CA's private key")),(0,r.yg)("p",null,"All this will be done on the ",(0,r.yg)("inlineCode",{parentName:"p"},"UserXX-LinuxToolsVM"),"."),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"In  ",(0,r.yg)("inlineCode",{parentName:"p"},"VSCode")," terminal")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Install ",(0,r.yg)("inlineCode",{parentName:"p"},"mkcert")," command"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"sudo apt install -y libnss3-tools\nsudo apt install -y mkcert\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Create the Root CA certificates"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"mkcert --install\n")),(0,r.yg)("p",{parentName:"li"},"This command would install CA on the ",(0,r.yg)("inlineCode",{parentName:"p"},"UserXX-LinuxToolsVM")," and add the ",(0,r.yg)("inlineCode",{parentName:"p"},"rootCA.pem")," public certificate to system trust store")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Copy the contents of ",(0,r.yg)("inlineCode",{parentName:"p"},"rootCA.pem")," public certificate to your present working directory"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"cp /home/ubuntu/.local/share/mkcert/rootCA.pem $HOME/ocpuserXX/\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Create public and private key certificates for ",(0,r.yg)("inlineCode",{parentName:"p"},"pc.ntnxlab.local")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"mkcert pc.ntnxlab.local\n")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash",metastring:'title="Command output"',title:'"Command','output"':!0},'mkcert pc.ntnxlab.local\n#\nCreated a new certificate valid for the following names \ud83d\udcdc\n- "pc.ntnxlab.local"\n\nThe certificate is at "./pc.ntnxlab.local.pem" and the key at "./pc.ntnxlab.local-key.pem" \u2705\n\nIt will expire on 30 August 2027\n'))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"List the contents of the directory to make sure all the certificates are present"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"ls -l *.pem | awk '{print $9}'\n")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash",metastring:'title="Output"',title:'"Output"'},"pc.ntnxlab.local.pem                ## Prism Central's public certificate signed by Root CA\npc.ntnxlab.local-key.pem            ## Prism Central's private key\nrootCA.pem                          ## Root CA's public certificate\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("inlineCode",{parentName:"p"},"cat")," out the contents of certificate files and copy them to your Mac/PC workstation in separate files"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-buttonless"},"cat pc.ntnxlab.local.pem\ncat pc.ntnxlab.local-key.pem\ncat rootCA.pem\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Create these files on Mac/PC"),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"On a Mac, use  ",(0,r.yg)("inlineCode",{parentName:"li"},"vi")," in Terminal or ",(0,r.yg)("inlineCode",{parentName:"li"},"VSCode"),"  (if you already have it installed)"),(0,r.yg)("li",{parentName:"ul"},"On Windows PC, use ",(0,r.yg)("inlineCode",{parentName:"li"},"Notepad")," or ",(0,r.yg)("inlineCode",{parentName:"li"},"VSCode")," ")))),(0,r.yg)("ol",{start:9},(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Create a hosts file entry on your Mac/PC for Prism Central's IP with the following content:"),(0,r.yg)(l.A,{groupId:"Method",mdxType:"Tabs"},(0,r.yg)(o.A,{value:"Mac Command",label:"Mac Command",mdxType:"TabItem"},(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"sudo vi /etc/hosts\n"))),(0,r.yg)(o.A,{value:"PC Command",label:"PC Command",mdxType:"TabItem"},(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-PowerShell"},"notepad C:\\Windows\\System32\\drivers\\etc\\hosts\n")))),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash",metastring:'title="Hosts file content"',title:'"Hosts',file:!0,'content"':!0},"10.x.x.x   pc.ntnxlab.local\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Clear Mac/PC DNS Cache"),(0,r.yg)(l.A,{groupId:"Method",mdxType:"Tabs"},(0,r.yg)(o.A,{value:"Mac Command",label:"Mac Command",mdxType:"TabItem"},(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"sudo dscacheutil -flushcache\nsudo killall -HUP mDNSResponder\n"))),(0,r.yg)(o.A,{value:"PC Command",label:"PC Command",mdxType:"TabItem"},(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-PowerShell"},"ipconfig /flushdns\n"))))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Logon to Prism Central Web GUI on the Mac/PC using Chrome browser"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-url"},"https://pc.ntnxlab.local/\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Go to ",(0,r.yg)("strong",{parentName:"p"},"Settings > SSL Certificate"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Click on ",(0,r.yg)("strong",{parentName:"p"},"Replace Certificate")," ")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Select ",(0,r.yg)("strong",{parentName:"p"},"Import Key and Certificate"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Click ",(0,r.yg)("strong",{parentName:"p"},"Next"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Choose the following:"),(0,r.yg)("blockquote",{parentName:"li"},(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("strong",{parentName:"p"},"Private Key Type")," - RSA 2048 bit ")),(0,r.yg)("blockquote",{parentName:"li"},(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("strong",{parentName:"p"},"Private Key")," - ",(0,r.yg)("inlineCode",{parentName:"p"},"pc.ntnxlab.local-key.pem"))),(0,r.yg)("blockquote",{parentName:"li"},(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("strong",{parentName:"p"},"Public Certificate")," - ",(0,r.yg)("inlineCode",{parentName:"p"},"pc.ntnxlab.local.pem"))),(0,r.yg)("blockquote",{parentName:"li"},(0,r.yg)("p",{parentName:"blockquote"},(0,r.yg)("strong",{parentName:"p"},"CA Certificate/Chain")," - ",(0,r.yg)("inlineCode",{parentName:"p"},"rootCA.pem")))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Click on ",(0,r.yg)("strong",{parentName:"p"},"Import Files"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Prism Central GUI will accept the certificate and restart for the changes to take effect. "),(0,r.yg)("p",{parentName:"li"},(0,r.yg)("img",{src:t(2877).A,width:"441",height:"264"})),(0,r.yg)("p",{parentName:"li"},"You have now successfully installed SSL certificate on Prism Central."),(0,r.yg)("admonition",{parentName:"li",type:"caution"},(0,r.yg)("p",{parentName:"admonition"},"Do not proceed to the next steps until Prism Central Certificate is installed without errors. "),(0,r.yg)("p",{parentName:"admonition"},"Contact your lab instructors if you need help with troubleshooting SSL certificate issues.")))),(0,r.yg)("h3",{id:"setting-up-cloud-credential-operator-utility-ccoctl"},"Setting up Cloud Credential Operator Utility (CCOCTL)"),(0,r.yg)("p",null,"Setting up of is necessary for Nutanix cluster credentials to be used with OCP cluster. "),(0,r.yg)("p",null,"Refer to ",(0,r.yg)("a",{parentName:"p",href:"https://docs.openshift.com/container-platform/4.7/authentication/managing_cloud_provider_credentials/about-cloud-credential-operator.html"},"Cloud Credential Operator CCO")," for more information. "),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"In the ",(0,r.yg)("inlineCode",{parentName:"p"},"UserXX-LinuxToolsVM"),", download and setup ",(0,r.yg)("inlineCode",{parentName:"p"},"ccoctl")," using the following commands"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"cd $HOME/ocpuserXX # e.g. cd $HOME/ocpuser01\n")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"RELEASE_IMAGE=$(openshift-install version | awk '/release image/ {print $3}')\n")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"CCO_IMAGE=$(oc adm release info --image-for='cloud-credential-operator' $RELEASE_IMAGE)\n")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},'oc image extract $CCO_IMAGE --file="/usr/bin/ccoctl" -a pull_secret.json\n')),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"chmod u+x ccoctl\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Make sure the ccoctl file is present "),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"ls -lh ccoctl \n")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash",metastring:'title="Output"',title:'"Output"'},"-rwxr----- 1 ubuntu ubuntu Apr 19 00:41 ccoctl\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Create a Prism Central credentials file in ",(0,r.yg)("inlineCode",{parentName:"p"},"creds")," directory"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash",metastring:"{8,9}","{8,9}":!0},'mkdir creds\n##\ncat << EOF > creds/pc_credentials.yaml\ncredentials:\n- type: basic_auth\n  data:\n    prismCentral:\n      username: "admin"\n      password: "PC-PASSWORD"\nEOF\n'))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Edit the ",(0,r.yg)("inlineCode",{parentName:"p"},"pc_credentials.yaml")," file to change your Prism Central password"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"vi creds/pc_credentials.yaml\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Extract the CredentialsRequests objects for Nutanix Prism Central and store in a ",(0,r.yg)("inlineCode",{parentName:"p"},"credreqs")," directory"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"oc adm release extract --credentials-requests --cloud=nutanix --to=credreqs -a pull_secret.json $RELEASE_IMAGE\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Use the ccoctl tool to process the CredentialsRequests objects and generate secret manifest files. These manifests file will be used during OCP cluster Certification"),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"./ccoctl nutanix create-shared-secrets --credentials-requests-dir=credreqs --output-dir=. --credentials-source-filepath=creds/pc_credentials.yaml\n")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-buttonless",metastring:'title="Output"',title:'"Output"'},"2022/09/29 23:53:36 Saved credentials configuration to: manifests/openshift-machine-api-nutanix-credentials-credentials.yaml\n"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},"Check the ",(0,r.yg)("inlineCode",{parentName:"p"},"openshift-machine-api-nutanix-credentials-credentials.yaml")," file to make sure the contents are good using ",(0,r.yg)("inlineCode",{parentName:"p"},"cat")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"cat manifests/openshift-machine-api-nutanix-credentials-credentials.yaml\n")),(0,r.yg)("pre",{parentName:"li"},(0,r.yg)("code",{parentName:"pre",className:"language-buttonless",metastring:'{8} title="Your credentials will be different"',"{8}":!0,title:'"Your',credentials:!0,will:!0,be:!0,'different"':!0},"apiVersion: v1\nkind: Secret\nmetadata:\n   name: nutanix-credentials\n   namespace: openshift-machine-api\ntype: Opaque\ndata:\n   credentials: W3sidHlwZSI6ImJhc2ljX2F1dGgiLCJkYXRhIjp7InByaXNtQ2VudHJhbCI6eyJ1c2VybmFtZSI6ImFkbWluIiwicGFzc3dvcmQiOiJ0ZWNoWDIwMjAhIn0sInByaXNtRWxlbWVudHMiOm51bGx9fV0=\n")))),(0,r.yg)("p",null,"Now that we have all pre-requisites completed, let us move on to creating the OCP cluster IPI installation manifest"))}d.isMDXComponent=!0},2877:(e,a,t)=>{t.d(a,{A:()=>n});const n=t.p+"assets/images/pc-crt-installed-452f74cbe7f3751ec61f46b6ecd22829.png"}}]);